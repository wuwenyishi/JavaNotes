    <!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="utf-8">
    <link rel="canonical" href="https://blog.csdn.net/dengjin20104042056/article/details/117079473"/>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta name="renderer" content="webkit"/>
    <meta name="force-rendering" content="webkit"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="report" content='{"spm":"1001.2101","extra":{"tsab":"control-1","lvab":"t_1"},"pid":"blog"}'>
    <meta name="referrer" content="always">
    <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />
    <meta name="shenma-site-verification" content="5a59773ab8077d4a62bf469ab966a63b_1497598848">
    <meta name="applicable-device" content="pc">
    <link  href="https://g.csdnimg.cn/static/logo/favicon32.ico"  rel="shortcut icon" type="image/x-icon" />
    <title>【Qt】modbus之TCP模式读操作_modbus tcp读_沧海一笑-dj的博客-CSDN博客</title>
    <script>
      (function(){ 
        var el = document.createElement("script"); 
        el.src = "https://s3a.pstatp.com/toutiao/push.js?1abfa13dfe74d72d41d83c86d240de427e7cac50c51ead53b2e79d40c7952a23ed7716d05b4a0f683a653eab3e214672511de2457e74e99286eb2c33f4428830"; 
        el.id = "ttzz"; 
        var s = document.getElementsByTagName("script")[0]; 
        s.parentNode.insertBefore(el, s);
      })(window)
    </script>
        <meta name="keywords" content="modbus tcp读">
        <meta name="csdn-baidu-search"  content='{"autorun":true,"install":true,"keyword":"modbus tcp读"}'>
    <meta name="description" content="00. 目录文章目录00. 目录01. 概述02. 开发环境03. 读Coils程序示例04. 读DiscreteInputs程序示例05. 读InputRegisters程序示例06. 读HoldingRegisters程序示例07. 综合示例08. 程序下载09. 附录01. 概述Qt中几个常用的串口modbus类QModbusRtuSerialSlave       //modbus串口通信方式下的服务器类QModbusRtuSerialMaster      //串口通信方式下的客户端类_modbus tcp读">
        <link rel="stylesheet" type="text/css" href="https://csdnimg.cn/release/blogv2/dist/pc/css/detail_enter-9d2aa2937c.min.css">
    <style>
        #content_views pre{
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none; 
            user-select: none; 
        }
        #content_views pre code{
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none; 
            user-select: none; 
        }
    </style>
    <script type="application/ld+json">{"@context":"https://ziyuan.baidu.com/contexts/cambrian.jsonld","@id":"https://blog.csdn.net/dengjin20104042056/article/details/117079473","appid":"1638831770136827","pubDate":"2021-05-20T15:47:37","title":"【Qt】modbus之TCP模式读操作_modbus tcp读_沧海一笑-dj的博客-CSDN博客","upDate":"2021-05-20T15:47:57"}</script>
        <link rel="stylesheet" type="text/css" href="https://csdnimg.cn/release/blogv2/dist/pc/themesSkin/skin-yellow/skin-yellow-28d34ab5fa.min.css">
    <script src="https://csdnimg.cn/public/common/libs/jquery/jquery-1.9.1.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        var isCorporate = false;//注释删除enterprise
        var username =  "dengjin20104042056";
        var skinImg = "white";
        var blog_address = "https://dengjin.blog.csdn.net";
        var currentUserName = "";
        var isOwner = false;
        var loginUrl = "http://passport.csdn.net/account/login?from=https://blog.csdn.net/dengjin20104042056/article/details/117079473";
        var blogUrl = "https://blog.csdn.net/";
        var avatar = "https://profile-avatar.csdnimg.cn/6137607fbdad4a0d9e302cbab2d548cc_dengjin20104042056.jpg!1";
        var articleTitle = "【Qt】modbus之TCP模式读操作";
        var articleDesc = "00. 目录文章目录00. 目录01. 概述02. 开发环境03. 读Coils程序示例04. 读DiscreteInputs程序示例05. 读InputRegisters程序示例06. 读HoldingRegisters程序示例07. 综合示例08. 程序下载09. 附录01. 概述Qt中几个常用的串口modbus类QModbusRtuSerialSlave       //modbus串口通信方式下的服务器类QModbusRtuSerialMaster      //串口通信方式下的客户端类_modbus tcp读";
        var articleTitles = "【Qt】modbus之TCP模式读操作_modbus tcp读_沧海一笑-dj的博客-CSDN博客";
        var nickName = "沧海一笑-dj";
        var articleDetailUrl = "https://dengjin.blog.csdn.net/article/details/117079473";
        if(window.location.host.split('.').length == 3) {
            blog_address = blogUrl + username;
        }
        var skinStatus = "White";
        var robotModule = '';
        var blogStaticHost = "https://csdnimg.cn/release/blogv2/"
        var mallTestStyle = "control"
    </script>
    <script src="https://g.csdnimg.cn/??fixed-sidebar/1.1.7/fixed-sidebar.js" type="text/javascript"></script>
    <script src='//g.csdnimg.cn/common/csdn-report/report.js' type='text/javascript'></script>
    <link rel="stylesheet" type="text/css" href="https://csdnimg.cn/public/sandalstrap/1.4/css/sandalstrap.min.css">
    <style>
        .MathJax, .MathJax_Message, .MathJax_Preview{
            display: none
        }
    </style>
    <script src="https://dup.baidustatic.com/js/ds.js"></script>
</head>
  <body class="nodata " style="">
        <script>
            var toolbarSearchExt = '{"landingWord":["modbus tcp读"],"queryWord":"","tag":["modbus","Qmodbus","TCP"],"title":"【Qt】modbus之TCP模式读操作"}';
        </script>
    <script src="https://g.csdnimg.cn/common/csdn-toolbar/csdn-toolbar.js" type="text/javascript"></script>
    <script>
    (function(){
        var bp = document.createElement('script');
        var curProtocol = window.location.protocol.split(':')[0];
        if (curProtocol === 'https') {
            bp.src = 'https://zz.bdstatic.com/linksubmit/push.js';
        }
        else {
            bp.src = 'http://push.zhanzhang.baidu.com/push.js';
        }
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(bp, s);
    })();
    </script>

    <link rel="stylesheet" href="https://csdnimg.cn/release/blogv2/dist/pc/css/blog_code-01256533b5.min.css">
    <link rel="stylesheet" href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/chart-3456820cac.css" />
    <link rel="stylesheet" href="https://g.csdnimg.cn/lib/swiper/6.0.4/css/swiper.css" />
    <script src="https://g.csdnimg.cn/lib/swiper/6.0.4/js/swiper.js" async></script>
    <script>
      var articleId = 117079473;
      var commentscount = 9;
      var curentUrl = "https://blog.csdn.net/dengjin20104042056/article/details/117079473";
      var myUrl = "https://my.csdn.net/";
        var highlight = ["modbus","tcp","qt","模式","操作","读"];//高亮数组
        var isRecommendModule = true;
          var isBaiduPre = true;
          var baiduCount = 2;
          var setBaiduJsCount = 10;
      var share_card_url = "https://app-blog.csdn.net/share?article_id=117079473&username=dengjin20104042056"
      var articleType = 1;
      var baiduKey = "modbus tcp读";
      var copyPopSwitch = true;
      var needInsertBaidu = true;
      var recommendRegularDomainArr = ["blog.csdn.net/.+/article/details/","download.csdn.net/download/","edu.csdn.net/course/detail/","ask.csdn.net/questions/","bbs.csdn.net/topics/","www.csdn.net/gather_.+/"]
      var codeStyle = "tomorrow-night";
      var baiduSearchType = "baidulandingword";
      var sharData = "{\"hot\":[{\"id\":1,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/a5f4260710904e538002a6ab337939b3.png\"},{\"id\":2,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/188b37199a2c4b74b1d9ffc39e0d52de.png\"},{\"id\":3,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/14ded358b631444581edd98a256bc5af.png\"},{\"id\":4,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/1470f23a770444d986ad551b9c33c5be.png\"},{\"id\":5,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/c329f5181dc74f6c9bd28c982bb9f91d.png\"},{\"id\":6,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/ccd8a3305e81460f9c505c95b432a65f.png\"},{\"id\":7,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/bc89d8283389440d97fc4d30e30f45e1.png\"},{\"id\":8,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/452d485b4a654f5592390550d2445edf.png\"},{\"id\":9,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/f8b9939db2ed474a8f43a643015fc8b7.png\"},{\"id\":10,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/6de8864187ab4ed3b1db0856369c36ff.png\"},{\"id\":11,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/673cc3470ff74072acba958dc0c46e2d.png\"},{\"id\":12,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/930c119760ac4491804db80f9c6d4e3f.png\"},{\"id\":13,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/15e6befb05a24233bc2b65e96aa8d972.png\"},{\"id\":14,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/2075fd6822184b95a41e214de4daec13.png\"},{\"id\":15,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/859b1552db244eb6891a809263a5c657.png\"},{\"id\":16,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/0be2f920f1f74290a98921974a9613fd.png\"},{\"id\":17,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/2e97e00b43f14afab494ea55ef3f4a6e.png\"},{\"id\":18,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/ff4ab252f46e444686f5135d6ebbfec0.png\"},{\"id\":19,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/ae029bbe99564e79911657912d36524f.png\"},{\"id\":20,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/b3ece39963de440388728e9e7b9bf427.png\"},{\"id\":21,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/6f14651a99ba486e926d63b6fa692997.png\"},{\"id\":22,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/83ceddf050084875a341e32dcceca721.png\"},{\"id\":23,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/b90368b8fd5d4c6c8c79a707d877cf7c.png\"},{\"id\":24,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/aeffae14ecf14e079b2616528c9a393b.png\"},{\"id\":25,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/c5a06b5a13d44d16bed868fc3384897a.png\"},{\"id\":26,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/08b697658b844b318cea3b119e9541ef.png\"},{\"id\":27,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/68ccb0b8d09346ac961d2b5c1a8c77bf.png\"},{\"id\":28,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/a2227a247e37418cbe0ea972ba6a859b.png\"},{\"id\":29,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/3a42825fede748f9993e5bb844ad350d.png\"},{\"id\":30,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/8882abc1dd484224b636966ea38555c3.png\"},{\"id\":31,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/4f6a5f636a3e444d83cf8cc06d87a159.png\"},{\"id\":32,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/1953ef79c56b4407b78d7181bdff11c3.png\"},{\"id\":33,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/c04a2a4f772948ed85b5b0380ed36287.png\"},{\"id\":34,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/5b4fecd05091405ea04d8c0f53e9f2c7.png\"},{\"id\":35,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/b89f576d700344e280d6ceb2a66c2420.png\"},{\"id\":36,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/1c65780e11804bbd9971ebadb3d78bcf.png\"},{\"id\":37,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/d590db2055f345db9706eb68a7ec151a.png\"},{\"id\":38,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/fe602f80700b4f6fb3c4a9e4c135510e.png\"},{\"id\":39,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/39ff2fcd31e04feba301a071976a0ba7.png\"},{\"id\":40,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/f9b61b3d113f436b828631837f89fb39.png\"},{\"id\":41,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/df1aca5f610c4ad48cd16da88c9c8499.png\"},{\"id\":42,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/d7acf73a1e6b41399a77a85040e10961.png\"},{\"id\":43,\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/b7f1b63542524b97962ff649ab4e7e23.png\"}],\"vip\":[{\"id\":1,\"vipUrl\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220920101150.png\",\"url\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220920101154.png\"},{\"id\":2,\"vipUrl\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220920101204.png\",\"url\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220920101208.png\"},{\"id\":3,\"vipUrl\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220920101211.png\",\"url\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220920101215.png\"},{\"id\":4,\"vipUrl\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220920101218.png\",\"url\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220920101220.png\"},{\"id\":5,\"vipUrl\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220920101223.png\",\"url\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220920101226.png\"},{\"id\":6,\"vipUrl\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220922100635.png\",\"url\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220922100639.png\"},{\"id\":7,\"vipUrl\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220922100642.png\",\"url\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220922100644.png\"},{\"id\":8,\"vipUrl\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220922100647.png\",\"url\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220922100649.png\"},{\"id\":9,\"vipUrl\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220922100652.png\",\"url\":\"https:\\/\\/img-home.csdnimg.cn\\/images\\/20220922100655.png\"},{\"id\":10,\"vipUrl\":\"https:\\/\\/img-blog.csdnimg.cn\\/55de67481fde4b04b97ad78f11fe369a.png\",\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/bb2418fb537e4d78b10d8765ccd810c5.png\"},{\"id\":11,\"vipUrl\":\"https:\\/\\/img-blog.csdnimg.cn\\/579c713394584d128104ef1044023954.png\",\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/f420d9fbcf5548079d31b5e809b6d6cd.png\"},{\"id\":12,\"vipUrl\":\"https:\\/\\/img-blog.csdnimg.cn\\/75b7f3155ba642f5a4cc16b7baf44122.png\",\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/a9030f5877be401f8b340b80b0d91e64.png\"},{\"id\":13,\"vipUrl\":\"https:\\/\\/img-blog.csdnimg.cn\\/0903d33cafa54934be3780aa54ae958d.png\",\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/2cd8c8929f5a42fca5da2a0aeb456203.png\"},{\"id\":14,\"vipUrl\":\"https:\\/\\/img-blog.csdnimg.cn\\/949fd7c22884439fbfc3c0e9c3b8dee7.png\",\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/dafbea9bd9eb4f3b962b48dc41657f89.png\"},{\"id\":15,\"vipUrl\":\"https:\\/\\/img-blog.csdnimg.cn\\/4119cfddd71d4e6a8a27a18dbb74d90e.png\",\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/c56310c8b6384d9e85388e4e342ce508.png\"},{\"id\":16,\"vipUrl\":\"https:\\/\\/img-blog.csdnimg.cn\\/121575274da142bcbbbbc2e8243dd411.png\",\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/5013993de06542f881018bb9abe2edf7.png\"},{\"id\":17,\"vipUrl\":\"https:\\/\\/img-blog.csdnimg.cn\\/4d97aa6dd4fe4f09a6bef5bdf8a6abcd.png\",\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/76f23877b6ad4066ad45ce8e31b4b977.png\"},{\"id\":18,\"vipUrl\":\"https:\\/\\/img-blog.csdnimg.cn\\/fdb619daf21b4c829de63b9ebc78859d.png\",\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/a1abe5d27a5441f599adfe662f510243.png\"},{\"id\":19,\"vipUrl\":\"https:\\/\\/img-blog.csdnimg.cn\\/676b7707bb11410f8f56bc0ed2b2345c.png\",\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/7ac5b467fbf24e1d8c2de3f3332c4f54.png\"},{\"id\":20,\"vipUrl\":\"https:\\/\\/img-blog.csdnimg.cn\\/0becb8cc227e4723b765bdd69a20fd4a.png\",\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/fdec85b26091486b9a89d0b8d45c3749.png\"},{\"id\":21,\"vipUrl\":\"https:\\/\\/img-blog.csdnimg.cn\\/1a6c06235ad44941b38c54cbc25a370c.png\",\"url\":\"https:\\/\\/img-blog.csdnimg.cn\\/410a06cda2d44b0c84578f88275caf70.png\"}],\"map\":{\"hot\":\"热门\",\"vip\":\"VIP\"}}";
      
      var canRead = true;
      var blogMoveHomeArticle = false;
      var showSearchText = "";
      var articleSource = 1;
      var articleReport = '{"spm":"1001.2101","extra":{"tsab":"control-1","lvab":"t_1"},"pid":"blog"}';
        var baiduSearchChannel = 'pc_relevant'
        var baiduSearchIdentification = '.235^v38^pc_relevant_sort_base2'
        var distRequestId = '1693475631907_27398'
        var initRewardObject = {
          giver: currentUserName,
          anchor: username,
          articleId: articleId,
          sign: ''
        }
        var isLikeStatus = false;
        var isUnLikeStatus = false;
        var studyLearnWord = "";
        var isCurrentUserVip = false;
        var contentViewsHeight = 0;
        var contentViewsCount = 0;
        var contentViewsCountLimit = 5;
        var isShowConcision = false;
      var isCookieConcision = false
      var isHasDirectoryModel = false
      var isShowSideModel = false
      var isShowDirectoryModel = true
      function getCookieConcision(sName){
        var allCookie = document.cookie.split("; ");
        for (var i=0; i < allCookie.length; i++){
          var aCrumb = allCookie[i].split("=");
          if (sName == aCrumb[0])
            return aCrumb[1];
        }
        return null;
      }
      if (getCookieConcision('blog_details_concision') && getCookieConcision('blog_details_concision') == 0){
        isCookieConcision = true
        isShowSideModel = true
        isShowDirectoryModel = false
      }
    </script>
        <div class="main_father clearfix d-flex justify-content-center " style="height:100%;">
          <div class="container clearfix " id="mainBox">
          <script>
          if (!isCookieConcision) {
            $('.main_father').removeClass('mainfather-concision')
            $('.main_father .container').removeClass('container-concision')
          }
          </script>
          <main>
<script type="text/javascript">
    var resourceId =  "";
    function getQueryString(name) {   
      var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); //构造一个含有目标参数的正则表达式对象  
      var r = window.location.search.substr(1).match(reg);  //匹配目标参数
      if( r != null ) return decodeURIComponent( r[2] ); return '';   
    }
    function stripscript(s){ 
      var pattern = new RegExp("[`~!@#$^&*()=|{}':;',\\[\\].<>/?~！@#￥……&*（）——|{}【】‘；：”“'。，、？%]") 
      var rs = ""; 
      for (var i = 0; i < s.length; i++) { 
        rs = rs+s.substr(i, 1).replace(pattern, ''); 
      } 
      return rs;
    }
    var blogHotWords = stripscript(getQueryString('utm_term')).length > 1 ? stripscript(getQueryString('utm_term')) : ''
</script>
<div class="blog-content-box">
    <div class="article-header-box">
        <div class="article-header">
            <div class="article-title-box">
                <h1 class="title-article" id="articleContentId">【Qt】modbus之TCP模式读操作</h1>
            </div>
            <div class="article-info-box">
                    <div class="up-time">最新推荐文章于&nbsp;2023-01-28 16:36:18&nbsp;发布</div>
                <div class="article-bar-top">
                    <img class="article-type-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/original.png" alt="">
                    <div class="bar-content">
                      <a class="follow-nickName " href="https://dengjin.blog.csdn.net" target="_blank" rel="noopener" title="沧海一笑-dj">沧海一笑-dj</a>
                    <img class="article-time-img article-heard-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCurrentTime2.png" alt="">
                          <span class="time blog-postTime" data-time="2021-05-20 15:47:57">最新推荐文章于&nbsp;2023-01-28 16:36:18&nbsp;发布</span>
                    <img class="article-read-img article-heard-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/articleReadEyes2.png" alt="">
                    <span class="read-count">3269</span>
                    <a id="blog_detail_zk_collection" class="un-collection" data-report-click='{"mod":"popu_823","spm":"1001.2101.3001.4232","ab":"new"}'>
                        <img class="article-collect-img article-heard-img un-collect-status isdefault" style="display:inline-block" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCollect2.png" alt="">
                        <img class="article-collect-img article-heard-img collect-status isactive" style="display:none" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCollectionActive2.png" alt="">
                        <span class="name">收藏</span>
                        <span class="get-collection">
                            39
                        </span>
                    </a>
                    </div>
                </div>
                <div class="blog-tags-box">
                    <div class="tags-box artic-tag-box">
                            <span class="label">分类专栏：</span>
                                <a class="tag-link" href="https://blog.csdn.net/dengjin20104042056/category_1737479.html" target="_blank" rel="noopener">Qt</a>
                            <span class="label">文章标签：</span>
                                <a rel="nofollow" data-report-click='{"mod":"popu_626","spm":"1001.2101.3001.4223","strategy":"modbus","ab":"new","extra":"{\"searchword\":\"modbus\"}"}' class="tag-link" href="https://so.csdn.net/so/search/s.do?q=modbus&amp;t=all&amp;o=vip&amp;s=&amp;l=&amp;f=&amp;viparticle=" target="_blank" rel="noopener">modbus</a>
                                <a rel="nofollow" data-report-click='{"mod":"popu_626","spm":"1001.2101.3001.4223","strategy":"Qmodbus","ab":"new","extra":"{\"searchword\":\"Qmodbus\"}"}' class="tag-link" href="https://so.csdn.net/so/search/s.do?q=Qmodbus&amp;t=all&amp;o=vip&amp;s=&amp;l=&amp;f=&amp;viparticle=" target="_blank" rel="noopener">Qmodbus</a>
                                <a rel="nofollow" data-report-click='{"mod":"popu_626","spm":"1001.2101.3001.4223","strategy":"TCP","ab":"new","extra":"{\"searchword\":\"TCP\"}"}' class="tag-link" href="https://so.csdn.net/so/search/s.do?q=TCP&amp;t=all&amp;o=vip&amp;s=&amp;l=&amp;f=&amp;viparticle=" target="_blank" rel="noopener">TCP</a>
                    </div>
                </div>
                <div class="slide-content-box">
                    <div class="article-copyright">
                        <div class="creativecommons">
                            版权声明：本文为博主原创文章，遵循<a href="http://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接和本声明。
                        </div>
                        <div class="article-source-link">
                            本文链接：<a href="https://blog.csdn.net/dengjin20104042056/article/details/117079473" target="_blank">https://blog.csdn.net/dengjin20104042056/article/details/117079473</a>
                        </div>
                    </div>
                </div>
                
                <div class="operating">
                    <a class="href-article-edit slide-toggle">版权</a>
                </div>
            </div>
        </div>
    </div>
    <div id="blogHuaweiyunAdvert"></div>
        <div id="blogColumnPayAdvert">
            <div class="column-group">
                <div class="column-group-item column-group0 column-group-item-one">
                    <div class="item-l">
                        <a class="item-target" href="https://blog.csdn.net/dengjin20104042056/category_1737479.html" target="_blank" title="Qt"
                        data-report-view='{"spm":"1001.2101.3001.6332"}'
                        data-report-click='{"spm":"1001.2101.3001.6332"}'>
                            <img class="item-target" src="https://img-blog.csdnimg.cn/20190829173126794.jfif?x-oss-process=image/resize,m_fixed,h_224,w_224" alt="">
                            <span class="title item-target">
                                <span>
                                <span class="tit">Qt</span>
                                    <span class="dec">专栏收录该内容</span>
                                </span>
                            </span>
                        </a>
                    </div>
                    <div class="item-m">
                        <span>164 篇文章</span>
                        <span>318 订阅</span>
                    </div>
                    <div class="item-r">
                            <a class="item-target article-column-bt articleColumnFreeBt" data-id="1737479">订阅专栏</a>
                    </div>
                </div>
            </div>
        </div>
    <article class="baidu_pl">
        <div id="article_content" class="article_content clearfix">
        <link rel="stylesheet" href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/kdoc_html_views-1a98987dfd.css">
        <link rel="stylesheet" href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-25cebea3f9.css">
                <div id="content_views" class="markdown_views prism-tomorrow-night">
                    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                        <path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path>
                    </svg>
                    <h2><a id="00__0"></a>00. 目录</h2> 
<p></p> 
<div class="toc"> 
 <h3>文章目录</h3> 
 <ul><li><ul><li><a href="#00__0">00. 目录</a></li><li><a href="#01__3">01. 概述</a></li><li><a href="#02__17">02. 开发环境</a></li><li><a href="#03_Coils_54">03. 读Coils程序示例</a></li><li><a href="#04_DiscreteInputs_323">04. 读DiscreteInputs程序示例</a></li><li><a href="#05_InputRegisters_418">05. 读InputRegisters程序示例</a></li><li><a href="#06_HoldingRegisters_511">06. 读HoldingRegisters程序示例</a></li><li><a href="#07__604">07. 综合示例</a></li><li><a href="#08__1395">08. 程序下载</a></li><li><a href="#09__1403">09. 附录</a></li></ul> 
 </li></ul> 
</div> 
<p></p> 
<h2><a id="01__3"></a>01. 概述</h2> 
<p>Qt中几个常用的串口modbus类</p> 
<pre><code class="prism language-c">QModbusRtuSerialSlave       <span class="token comment">//modbus串口通信方式下的服务器类</span>
QModbusRtuSerialMaster      <span class="token comment">//串口通信方式下的客户端类</span>
QModbusServer               <span class="token comment">// QModbusServer类接收和处理modbus的请求。</span>
QModbusDataUnit             <span class="token comment">//存储接收和发送数据的类&#xff0c;数据类型为1bit和16bit</span>
QModbusReply                <span class="token comment">//客户端访问服务器后得到的回复&#xff08;如客户端读服务器数据时包含数据信息&#xff09;</span>
</code></pre> 
<h2><a id="02__17"></a>02. 开发环境</h2> 
<p><strong>Windows系统</strong>&#xff1a;Windows10</p> 
<p><strong>Qt版本</strong>&#xff1a;Qt5.15或者Qt6</p> 
<p>Pro配置文件如下</p> 
<pre><code class="prism language-shell">QT       &#43;<span class="token operator">&#61;</span> core gui serialbus serialport

greaterThan<span class="token punctuation">(</span>QT_MAJOR_VERSION, 4<span class="token punctuation">)</span>: QT &#43;<span class="token operator">&#61;</span> widgets

CONFIG &#43;<span class="token operator">&#61;</span> c&#43;&#43;11

<span class="token comment"># You can make your code fail to compile if it uses deprecated APIs.</span>
<span class="token comment"># In order to do so, uncomment the following line.</span>
<span class="token comment">#DEFINES &#43;&#61; QT_DISABLE_DEPRECATED_BEFORE&#61;0x060000    # disables all the APIs deprecated before Qt 6.0.0</span>

SOURCES &#43;<span class="token operator">&#61;</span> \
    main.cpp \
    widget.cpp

HEADERS &#43;<span class="token operator">&#61;</span> \
    widget.h

<span class="token comment"># Default rules for deployment.</span>
qnx: target.path <span class="token operator">&#61;</span> /tmp/$<span class="token variable">${TARGET}</span>/bin
else: unix:<span class="token operator">!</span>android: target.path <span class="token operator">&#61;</span> /opt/$<span class="token variable">${TARGET}</span>/bin
<span class="token operator">!</span>isEmpty<span class="token punctuation">(</span>target.path<span class="token punctuation">)</span>: INSTALLS &#43;<span class="token operator">&#61;</span> target

</code></pre> 
<h2><a id="03_Coils_54"></a>03. 读Coils程序示例</h2> 
<p><strong>widget.h文件</strong></p> 
<pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">ifndef</span> WIDGET_H</span>
<span class="token macro property">#<span class="token directive keyword">define</span> WIDGET_H</span>

<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QWidget&gt;</span></span>

<span class="token comment">//前向声明</span>
class QModbusClient<span class="token punctuation">;</span>
class QModbusReply<span class="token punctuation">;</span>


QT_BEGIN_NAMESPACE
namespace Ui <span class="token punctuation">{<!-- --></span> class Widget<span class="token punctuation">;</span> <span class="token punctuation">}</span>
QT_END_NAMESPACE

class Widget <span class="token punctuation">:</span> public QWidget
<span class="token punctuation">{<!-- --></span>
    Q_OBJECT

public<span class="token punctuation">:</span>
    <span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent <span class="token operator">&#61;</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

private<span class="token punctuation">:</span>
    Ui<span class="token punctuation">:</span><span class="token punctuation">:</span>Widget <span class="token operator">*</span>ui<span class="token punctuation">;</span>

    QModbusClient <span class="token operator">*</span>modbusDevice <span class="token operator">&#61;</span> nullptr<span class="token punctuation">;</span>


private slots<span class="token punctuation">:</span>
    <span class="token keyword">void</span> <span class="token function">onReadReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">onModbusStateChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnConnect_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnCoil_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnDiscreteInputs_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnInputRegisters_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnHoldingRegisters_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token macro property">#<span class="token directive keyword">endif</span> </span><span class="token comment">// WIDGET_H</span>
</code></pre> 
<p><strong>widget.cpp文件</strong></p> 
<pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&#34;widget.h&#34;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&#34;ui_widget.h&#34;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QDebug&gt;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QModbusTcpClient&gt;</span></span>


<span class="token comment">//构造函数</span>
Widget<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span>
    <span class="token punctuation">:</span> <span class="token function">QWidget</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
    <span class="token punctuation">,</span> <span class="token function">ui</span><span class="token punctuation">(</span>new Ui<span class="token punctuation">:</span><span class="token punctuation">:</span>Widget<span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    ui<span class="token operator">-&gt;</span><span class="token function">setupUi</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//1. 创建QModbusDevice对象</span>
    modbusDevice <span class="token operator">&#61;</span> new <span class="token function">QModbusTcpClient</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//禁用所有的读操作</span>
    ui<span class="token operator">-&gt;</span>btnCoil<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>btnDiscreteInputs<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>btnHoldingRegisters<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>btnInputRegisters<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">connect</span><span class="token punctuation">(</span>modbusDevice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QModbusClient<span class="token punctuation">:</span><span class="token punctuation">:</span>errorOccurred<span class="token punctuation">,</span> <span class="token punctuation">[</span>this<span class="token punctuation">]</span><span class="token punctuation">(</span>QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>Error<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;new Error: &#34;</span> <span class="token operator">&lt;&lt;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>nullptr <span class="token operator">&#61;&#61;</span> modbusDevice<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;Cannot Create Modbus Client&#34;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">connect</span><span class="token punctuation">(</span>modbusDevice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QModbusClient<span class="token punctuation">:</span><span class="token punctuation">:</span>stateChanged<span class="token punctuation">,</span>
                this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>Widget<span class="token punctuation">:</span><span class="token punctuation">:</span>onModbusStateChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>

<span class="token comment">//析构函数</span>
Widget<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">~</span><span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>modbusDevice<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        modbusDevice<span class="token operator">-&gt;</span><span class="token function">disconnectDevice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    delete modbusDevice<span class="token punctuation">;</span>

    delete ui<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">void</span> Widget<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">onReadReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">auto</span> reply <span class="token operator">&#61;</span> qobject_cast<span class="token operator">&lt;</span>QModbusReply<span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token function">sender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nullptr <span class="token operator">&#61;&#61;</span> reply<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//判断是否出错</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#61;&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>NoError<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token comment">//读取响应数据</span>
        <span class="token keyword">const</span> QModbusDataUnit responseData <span class="token operator">&#61;</span> reply<span class="token operator">-&gt;</span><span class="token function">result</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;读到数据为&#xff1a;&#34;</span> <span class="token operator">&lt;&lt;</span> responseData<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#61;&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>ProtocolError<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;Read response Protocol error: &#34;</span> <span class="token operator">&lt;&lt;</span> reply<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;Read response Error: &#34;</span> <span class="token operator">&lt;&lt;</span> reply<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token comment">//删除reply</span>
    reply<span class="token operator">-&gt;</span><span class="token function">deleteLater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">void</span> Widget<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">onModbusStateChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> state<span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token comment">//判断Modbus设备连接是否处于连接状态</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">&#61;&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>UnconnectedState<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;TCP Client连接到Server 未连接&#34;</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>btnConnect<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;连接&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        ui<span class="token operator">-&gt;</span>btnCoil<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>btnDiscreteInputs<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>btnHoldingRegisters<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>btnInputRegisters<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">&#61;&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>ConnectingState<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;TCP Client正在连接Server&#34;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">&#61;&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>ConnectedState<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;TCP Client已经连接到Server&#34;</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>btnConnect<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;断开连接&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        ui<span class="token operator">-&gt;</span>btnCoil<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>btnDiscreteInputs<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>btnHoldingRegisters<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>btnInputRegisters<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">&#61;&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>ClosingState<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;设备已经被关闭&#34;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//连接按钮槽函数</span>
<span class="token keyword">void</span> Widget<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">on_btnConnect_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>modbusDevice<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>modbusDevice<span class="token operator">-&gt;</span><span class="token function">state</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>ConnectedState<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        modbusDevice<span class="token operator">-&gt;</span><span class="token function">setConnectionParameter</span><span class="token punctuation">(</span>QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>NetworkAddressParameter<span class="token punctuation">,</span> <span class="token string">&#34;127.0.0.1&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        modbusDevice<span class="token operator">-&gt;</span><span class="token function">setConnectionParameter</span><span class="token punctuation">(</span>QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>NetworkPortParameter<span class="token punctuation">,</span> <span class="token number">10086</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//设置超时时间</span>
        modbusDevice<span class="token operator">-&gt;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//1秒</span>
        <span class="token comment">//设置失败重试次数</span>
        modbusDevice<span class="token operator">-&gt;</span><span class="token function">setNumberOfRetries</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//连接到服务端</span>
        bool ok <span class="token operator">&#61;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">connectDevice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ok<span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;modbusDevice-&gt;connectDevice failed&#34;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token comment">//断开连接</span>
        modbusDevice<span class="token operator">-&gt;</span><span class="token function">disconnectDevice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>btnConnect<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;连接&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        ui<span class="token operator">-&gt;</span>btnCoil<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>btnDiscreteInputs<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>btnHoldingRegisters<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>btnInputRegisters<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token comment">//读线圈</span>
<span class="token keyword">void</span> Widget<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">on_btnCoil_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token comment">//QModbusDataUnit::Coils 从地址0开始读取10个线圈值</span>
    QModbusDataUnit <span class="token function">data</span><span class="token punctuation">(</span>QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>Coils<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">auto</span> reply <span class="token operator">&#61;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">sendReadRequest</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">0x1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nullptr <span class="token operator">&#61;&#61;</span> reply<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;发送请求数据失败: &#34;</span> <span class="token operator">&lt;&lt;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reply<span class="token operator">-&gt;</span><span class="token function">isFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token function">connect</span><span class="token punctuation">(</span>reply<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QModbusReply<span class="token punctuation">:</span><span class="token punctuation">:</span>finished<span class="token punctuation">,</span> this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>Widget<span class="token punctuation">:</span><span class="token punctuation">:</span>onReadReady<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token comment">//broadcast replies return immediately</span>
            delete reply<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//读离散输入</span>
<span class="token keyword">void</span> Widget<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">on_btnDiscreteInputs_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>

<span class="token punctuation">}</span>

<span class="token comment">//读输入寄存器</span>
<span class="token keyword">void</span> Widget<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">on_btnInputRegisters_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>

<span class="token punctuation">}</span>

<span class="token comment">//读保持寄存器</span>
<span class="token keyword">void</span> Widget<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">on_btnHoldingRegisters_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>

<span class="token punctuation">}</span>
</code></pre> 
<p><strong>执行结果</strong></p> 
<pre><code class="prism language-shell">15:18:15: Starting D:\ProgramData\Qt\build-Test1-Desktop_Qt_5_15_2_MinGW_32_bit-Debug\debug\Test1.exe <span class="token punctuation">..</span>.
TCP Client正在连接Server
TCP Client已经连接到Server
读到数据为&#xff1a; QVector<span class="token punctuation">(</span>0, 0, 1, 0, 0, 0, 1, 0, 1, 0<span class="token punctuation">)</span>
设备已经被关闭
TCP Client连接到Server 未连接
15:18:36: D:\ProgramData\Qt\build-Test1-Desktop_Qt_5_15_2_MinGW_32_bit-Debug\debug\Test1.exe exited with code 0

</code></pre> 
<h2><a id="04_DiscreteInputs_323"></a>04. 读DiscreteInputs程序示例</h2> 
<p><strong>widget.h文件</strong></p> 
<pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">ifndef</span> WIDGET_H</span>
<span class="token macro property">#<span class="token directive keyword">define</span> WIDGET_H</span>

<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QWidget&gt;</span></span>

<span class="token comment">//前向声明</span>
class QModbusClient<span class="token punctuation">;</span>
class QModbusReply<span class="token punctuation">;</span>


QT_BEGIN_NAMESPACE
namespace Ui <span class="token punctuation">{<!-- --></span> class Widget<span class="token punctuation">;</span> <span class="token punctuation">}</span>
QT_END_NAMESPACE

class Widget <span class="token punctuation">:</span> public QWidget
<span class="token punctuation">{<!-- --></span>
    Q_OBJECT

public<span class="token punctuation">:</span>
    <span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent <span class="token operator">&#61;</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

private<span class="token punctuation">:</span>
    Ui<span class="token punctuation">:</span><span class="token punctuation">:</span>Widget <span class="token operator">*</span>ui<span class="token punctuation">;</span>

    QModbusClient <span class="token operator">*</span>modbusDevice <span class="token operator">&#61;</span> nullptr<span class="token punctuation">;</span>


private slots<span class="token punctuation">:</span>
    <span class="token keyword">void</span> <span class="token function">onReadReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">onModbusStateChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnConnect_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnCoil_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnDiscreteInputs_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnInputRegisters_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnHoldingRegisters_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token macro property">#<span class="token directive keyword">endif</span> </span><span class="token comment">// WIDGET_H</span>


</code></pre> 
<p><strong>widget.cpp文件</strong></p> 
<pre><code class="prism language-c"><span class="token comment">//读离散输入</span>
<span class="token keyword">void</span> Widget<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">on_btnDiscreteInputs_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token comment">//QModbusDataUnit::DiscreteInputs 从地址0开始读取10个离散输入值</span>
    QModbusDataUnit <span class="token function">data</span><span class="token punctuation">(</span>QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>DiscreteInputs<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">auto</span> reply <span class="token operator">&#61;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">sendReadRequest</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">0x1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nullptr <span class="token operator">&#61;&#61;</span> reply<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;发送请求数据失败: &#34;</span> <span class="token operator">&lt;&lt;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reply<span class="token operator">-&gt;</span><span class="token function">isFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token function">connect</span><span class="token punctuation">(</span>reply<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QModbusReply<span class="token punctuation">:</span><span class="token punctuation">:</span>finished<span class="token punctuation">,</span> this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>Widget<span class="token punctuation">:</span><span class="token punctuation">:</span>onReadReady<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token comment">//broadcast replies return immediately</span>
            delete reply<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<p><strong>执行结果</strong></p> 
<pre><code class="prism language-shell">15:25:14: Starting D:\ProgramData\Qt\build-Test1-Desktop_Qt_5_15_2_MinGW_32_bit-Debug\debug\Test1.exe <span class="token punctuation">..</span>.
TCP Client正在连接Server
TCP Client已经连接到Server
读到数据为&#xff1a; QVector<span class="token punctuation">(</span>1, 1, 1, 1, 1, 0, 0, 0, 0, 0<span class="token punctuation">)</span>
设备已经被关闭
TCP Client连接到Server 未连接
</code></pre> 
<h2><a id="05_InputRegisters_418"></a>05. 读InputRegisters程序示例</h2> 
<p><strong>widget.h文件</strong></p> 
<pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">ifndef</span> WIDGET_H</span>
<span class="token macro property">#<span class="token directive keyword">define</span> WIDGET_H</span>

<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QWidget&gt;</span></span>

<span class="token comment">//前向声明</span>
class QModbusClient<span class="token punctuation">;</span>
class QModbusReply<span class="token punctuation">;</span>


QT_BEGIN_NAMESPACE
namespace Ui <span class="token punctuation">{<!-- --></span> class Widget<span class="token punctuation">;</span> <span class="token punctuation">}</span>
QT_END_NAMESPACE

class Widget <span class="token punctuation">:</span> public QWidget
<span class="token punctuation">{<!-- --></span>
    Q_OBJECT

public<span class="token punctuation">:</span>
    <span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent <span class="token operator">&#61;</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

private<span class="token punctuation">:</span>
    Ui<span class="token punctuation">:</span><span class="token punctuation">:</span>Widget <span class="token operator">*</span>ui<span class="token punctuation">;</span>

    QModbusClient <span class="token operator">*</span>modbusDevice <span class="token operator">&#61;</span> nullptr<span class="token punctuation">;</span>


private slots<span class="token punctuation">:</span>
    <span class="token keyword">void</span> <span class="token function">onReadReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">onModbusStateChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnConnect_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnCoil_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnDiscreteInputs_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnInputRegisters_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnHoldingRegisters_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token macro property">#<span class="token directive keyword">endif</span> </span><span class="token comment">// WIDGET_H</span>


</code></pre> 
<p><strong>widget.cpp文件</strong></p> 
<pre><code class="prism language-c"><span class="token comment">//读输入寄存器</span>
<span class="token keyword">void</span> Widget<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">on_btnInputRegisters_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token comment">//QModbusDataUnit::InputRegisters 从地址0开始读取10个输入寄存器的值</span>
    QModbusDataUnit <span class="token function">data</span><span class="token punctuation">(</span>QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>InputRegisters<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">auto</span> reply <span class="token operator">&#61;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">sendReadRequest</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">0x1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nullptr <span class="token operator">&#61;&#61;</span> reply<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;发送请求数据失败: &#34;</span> <span class="token operator">&lt;&lt;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reply<span class="token operator">-&gt;</span><span class="token function">isFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token function">connect</span><span class="token punctuation">(</span>reply<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QModbusReply<span class="token punctuation">:</span><span class="token punctuation">:</span>finished<span class="token punctuation">,</span> this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>Widget<span class="token punctuation">:</span><span class="token punctuation">:</span>onReadReady<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token comment">//broadcast replies return immediately</span>
            delete reply<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<p><strong>执行结果</strong></p> 
<pre><code class="prism language-shell">15:28:06: Starting D:\ProgramData\Qt\build-Test1-Desktop_Qt_5_15_2_MinGW_32_bit-Debug\debug\Test1.exe <span class="token punctuation">..</span>.
TCP Client正在连接Server
TCP Client已经连接到Server
读到数据为&#xff1a; QVector<span class="token punctuation">(</span>0, 12, 0, 11, 0, 0, 13, 0, 0, 0<span class="token punctuation">)</span>
设备已经被关闭
TCP Client连接到Server 未连接
</code></pre> 
<h2><a id="06_HoldingRegisters_511"></a>06. 读HoldingRegisters程序示例</h2> 
<p><strong>widget.h文件</strong></p> 
<pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">ifndef</span> WIDGET_H</span>
<span class="token macro property">#<span class="token directive keyword">define</span> WIDGET_H</span>

<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QWidget&gt;</span></span>

<span class="token comment">//前向声明</span>
class QModbusClient<span class="token punctuation">;</span>
class QModbusReply<span class="token punctuation">;</span>


QT_BEGIN_NAMESPACE
namespace Ui <span class="token punctuation">{<!-- --></span> class Widget<span class="token punctuation">;</span> <span class="token punctuation">}</span>
QT_END_NAMESPACE

class Widget <span class="token punctuation">:</span> public QWidget
<span class="token punctuation">{<!-- --></span>
    Q_OBJECT

public<span class="token punctuation">:</span>
    <span class="token function">Widget</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent <span class="token operator">&#61;</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">Widget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

private<span class="token punctuation">:</span>
    Ui<span class="token punctuation">:</span><span class="token punctuation">:</span>Widget <span class="token operator">*</span>ui<span class="token punctuation">;</span>

    QModbusClient <span class="token operator">*</span>modbusDevice <span class="token operator">&#61;</span> nullptr<span class="token punctuation">;</span>


private slots<span class="token punctuation">:</span>
    <span class="token keyword">void</span> <span class="token function">onReadReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">onModbusStateChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnConnect_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnCoil_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnDiscreteInputs_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnInputRegisters_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">on_btnHoldingRegisters_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token macro property">#<span class="token directive keyword">endif</span> </span><span class="token comment">// WIDGET_H</span>
</code></pre> 
<p><strong>widget.cpp文件</strong></p> 
<pre><code class="prism language-c"><span class="token comment">//读保持寄存器</span>
<span class="token keyword">void</span> Widget<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">on_btnHoldingRegisters_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token comment">//从地址0开始读取10个保持寄存器的值</span>
    QModbusDataUnit <span class="token function">data</span><span class="token punctuation">(</span>QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>HoldingRegisters<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">auto</span> reply <span class="token operator">&#61;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">sendReadRequest</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">0x1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nullptr <span class="token operator">&#61;&#61;</span> reply<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;发送请求数据失败: &#34;</span> <span class="token operator">&lt;&lt;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reply<span class="token operator">-&gt;</span><span class="token function">isFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token function">connect</span><span class="token punctuation">(</span>reply<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QModbusReply<span class="token punctuation">:</span><span class="token punctuation">:</span>finished<span class="token punctuation">,</span> this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>Widget<span class="token punctuation">:</span><span class="token punctuation">:</span>onReadReady<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token comment">//broadcast replies return immediately</span>
            delete reply<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre> 
<p><strong>执行结果</strong></p> 
<pre><code class="prism language-shell">15:29:35: Starting D:\ProgramData\Qt\build-Test1-Desktop_Qt_5_15_2_MinGW_32_bit-Debug\debug\Test1.exe <span class="token punctuation">..</span>.
TCP Client正在连接Server
TCP Client已经连接到Server
读到数据为&#xff1a; QVector<span class="token punctuation">(</span>0, 0, 11, 12, 13, 14, 15, 0, 0, 111<span class="token punctuation">)</span>
设备已经被关闭
TCP Client连接到Server 未连接
</code></pre> 
<h2><a id="07__604"></a>07. 综合示例</h2> 
<p>程序界面</p> 
<p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-utd9gda4-1621496836516)(assets/image-20210520154331905.png)]</p> 
<p><strong>settingdialog.h文件</strong></p> 
<pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">ifndef</span> SETTINGDIALOG_H</span>
<span class="token macro property">#<span class="token directive keyword">define</span> SETTINGDIALOG_H</span>

<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QDialog&gt;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QtSerialPort&gt;</span></span>

namespace Ui <span class="token punctuation">{<!-- --></span>
class SettingDialog<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//串口设置相关类</span>
class SettingDialog <span class="token punctuation">:</span> public QDialog
<span class="token punctuation">{<!-- --></span>
    Q_OBJECT

public<span class="token punctuation">:</span>
    <span class="token keyword">struct</span> Settings
    <span class="token punctuation">{<!-- --></span>
        <span class="token comment">//串口名</span>
        QString serialName <span class="token operator">&#61;</span> <span class="token string">&#34;COM3&#34;</span><span class="token punctuation">;</span>
        <span class="token comment">//校验位</span>
        <span class="token keyword">int</span> parity <span class="token operator">&#61;</span> QSerialPort<span class="token punctuation">:</span><span class="token punctuation">:</span>NoParity<span class="token punctuation">;</span>
        <span class="token comment">//波特率</span>
        <span class="token keyword">int</span> baud <span class="token operator">&#61;</span> QSerialPort<span class="token punctuation">:</span><span class="token punctuation">:</span>Baud19200<span class="token punctuation">;</span>
        <span class="token comment">//数据位</span>
        <span class="token keyword">int</span> dataBits <span class="token operator">&#61;</span> QSerialPort<span class="token punctuation">:</span><span class="token punctuation">:</span>Data8<span class="token punctuation">;</span>
        <span class="token comment">//停止位</span>
        <span class="token keyword">int</span> stopBits <span class="token operator">&#61;</span> QSerialPort<span class="token punctuation">:</span><span class="token punctuation">:</span>OneStop<span class="token punctuation">;</span>

        <span class="token comment">//响应时间</span>
        <span class="token keyword">int</span> responseTime <span class="token operator">&#61;</span> <span class="token number">1000</span><span class="token punctuation">;</span>
        <span class="token comment">//重试次数</span>
        <span class="token keyword">int</span> numberOfRetries <span class="token operator">&#61;</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    explicit <span class="token function">SettingDialog</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent <span class="token operator">&#61;</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">SettingDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//返回参数设置信息</span>
    Settings  <span class="token function">settings</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>

private slots<span class="token punctuation">:</span>
    <span class="token keyword">void</span> <span class="token function">on_btnApply_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

private<span class="token punctuation">:</span>
    Ui<span class="token punctuation">:</span><span class="token punctuation">:</span>SettingDialog <span class="token operator">*</span>ui<span class="token punctuation">;</span>
    Settings m_settings<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token macro property">#<span class="token directive keyword">endif</span> </span><span class="token comment">// SETTINGDIALOG_H</span>

</code></pre> 
<p><strong>settingdialog.cpp文件</strong></p> 
<pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&#34;settingdialog.h&#34;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&#34;ui_settingdialog.h&#34;</span></span>

<span class="token comment">//构造函数</span>
SettingDialog<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">SettingDialog</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span> <span class="token punctuation">:</span>
    <span class="token function">QDialog</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">ui</span><span class="token punctuation">(</span>new Ui<span class="token punctuation">:</span><span class="token punctuation">:</span>SettingDialog<span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    ui<span class="token operator">-&gt;</span><span class="token function">setupUi</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//设置默认参数信息</span>
    ui<span class="token operator">-&gt;</span>serialNameLineEdit<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;COM3&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>parityComboBox<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    ui<span class="token operator">-&gt;</span>baudComboBox<span class="token operator">-&gt;</span><span class="token function">setCurrentText</span><span class="token punctuation">(</span>QString<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">number</span><span class="token punctuation">(</span>m_settings<span class="token punctuation">.</span>baud<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>dataBitComboBox<span class="token operator">-&gt;</span><span class="token function">setCurrentText</span><span class="token punctuation">(</span>QString<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">number</span><span class="token punctuation">(</span>m_settings<span class="token punctuation">.</span>dataBits<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>stopBitComboBox<span class="token operator">-&gt;</span><span class="token function">setCurrentText</span><span class="token punctuation">(</span>QString<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">number</span><span class="token punctuation">(</span>m_settings<span class="token punctuation">.</span>stopBits<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    ui<span class="token operator">-&gt;</span>spinBoxTimeOut<span class="token operator">-&gt;</span><span class="token function">setValue</span><span class="token punctuation">(</span>m_settings<span class="token punctuation">.</span>responseTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>spinBoxRetry<span class="token operator">-&gt;</span><span class="token function">setValue</span><span class="token punctuation">(</span>m_settings<span class="token punctuation">.</span>numberOfRetries<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token comment">//析构函数</span>
SettingDialog<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">~</span><span class="token function">SettingDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    delete ui<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//返回参数信息</span>
SettingDialog<span class="token punctuation">:</span><span class="token punctuation">:</span>Settings SettingDialog<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">settings</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">return</span> m_settings<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//引用按钮槽函数</span>
<span class="token keyword">void</span> SettingDialog<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">on_btnApply_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    m_settings<span class="token punctuation">.</span>serialName <span class="token operator">&#61;</span> ui<span class="token operator">-&gt;</span>serialNameLineEdit<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    m_settings<span class="token punctuation">.</span>parity <span class="token operator">&#61;</span> ui<span class="token operator">-&gt;</span>parityComboBox<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    m_settings<span class="token punctuation">.</span>baud <span class="token operator">&#61;</span> ui<span class="token operator">-&gt;</span>baudComboBox<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    m_settings<span class="token punctuation">.</span>dataBits <span class="token operator">&#61;</span> ui<span class="token operator">-&gt;</span>dataBitComboBox<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    m_settings<span class="token punctuation">.</span>stopBits <span class="token operator">&#61;</span> ui<span class="token operator">-&gt;</span>stopBitComboBox<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    m_settings<span class="token punctuation">.</span>responseTime <span class="token operator">&#61;</span> ui<span class="token operator">-&gt;</span>spinBoxTimeOut<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    m_settings<span class="token punctuation">.</span>numberOfRetries <span class="token operator">&#61;</span> ui<span class="token operator">-&gt;</span>spinBoxRetry<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//隐藏参数设置对话框</span>
    <span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre> 
<p><strong>mainwindow.h文件</strong></p> 
<pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">ifndef</span> MAINWINDOW_H</span>
<span class="token macro property">#<span class="token directive keyword">define</span> MAINWINDOW_H</span>

<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QMainWindow&gt;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QModbusDataUnit&gt;</span></span>

QT_BEGIN_NAMESPACE

namespace Ui
<span class="token punctuation">{<!-- --></span>
    class MainWindow<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

class SettingDialog<span class="token punctuation">;</span>
class QModbusClient<span class="token punctuation">;</span>
class QModbusReply<span class="token punctuation">;</span>


QT_END_NAMESPACE

class MainWindow <span class="token punctuation">:</span> public QMainWindow
<span class="token punctuation">{<!-- --></span>
    Q_OBJECT

public<span class="token punctuation">:</span>
    <span class="token function">MainWindow</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent <span class="token operator">&#61;</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">MainWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//信号与槽进行关联</span>
    <span class="token keyword">void</span> <span class="token function">initActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//读请求数据包封装</span>
    QModbusDataUnit <span class="token function">readRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>

private slots<span class="token punctuation">:</span>
    <span class="token keyword">void</span> <span class="token function">onConnectButtonClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">onConnectTypeChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">onModbusStateChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">onReadButtonClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">onReadReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

private<span class="token punctuation">:</span>
    Ui<span class="token punctuation">:</span><span class="token punctuation">:</span>MainWindow <span class="token operator">*</span>ui <span class="token operator">&#61;</span> nullptr<span class="token punctuation">;</span>

    SettingDialog <span class="token operator">*</span>m_settingDialog <span class="token operator">&#61;</span> nullptr<span class="token punctuation">;</span>

    QModbusClient <span class="token operator">*</span>modbusDevice <span class="token operator">&#61;</span> nullptr<span class="token punctuation">;</span>

    QModbusReply <span class="token operator">*</span>reply <span class="token operator">&#61;</span> nullptr<span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token macro property">#<span class="token directive keyword">endif</span> </span><span class="token comment">// MAINWINDOW_H</span>

</code></pre> 
<p><strong>mainwindow.cpp文件</strong></p> 
<pre><code class="prism language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&#34;mainwindow.h&#34;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&#34;ui_mainwindow.h&#34;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QMessageBox&gt;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&#34;settingdialog.h&#34;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QModbusRtuSerialMaster&gt;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QModbusReply&gt;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QStandardItemModel&gt;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QModbusDataUnit&gt;</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;QModbusTcpClient&gt;</span></span>

<span class="token comment">//连接类型枚举变量</span>
<span class="token keyword">enum</span> ModbusConnection <span class="token punctuation">{<!-- --></span>
    Serial<span class="token punctuation">,</span>
    Tcp
<span class="token punctuation">}</span><span class="token punctuation">;</span>


MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">MainWindow</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span>
    <span class="token punctuation">:</span> <span class="token function">QMainWindow</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
    <span class="token punctuation">,</span> <span class="token function">ui</span><span class="token punctuation">(</span>new Ui<span class="token punctuation">:</span><span class="token punctuation">:</span>MainWindow<span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    ui<span class="token operator">-&gt;</span><span class="token function">setupUi</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//创建对象</span>
    m_settingDialog <span class="token operator">&#61;</span> new <span class="token function">SettingDialog</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//初始化信号与槽</span>
    <span class="token function">initActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//创建写模型</span>
    writeModel <span class="token operator">&#61;</span> new <span class="token function">WriteRegisterModel</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
    writeModel<span class="token operator">-&gt;</span><span class="token function">setStartAddress</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>sbWriteStartAddr<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    writeModel<span class="token operator">-&gt;</span><span class="token function">setNumberOfValues</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>cbWriteCount<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//MVC</span>
    ui<span class="token operator">-&gt;</span>treeViewWrite<span class="token operator">-&gt;</span><span class="token function">setModel</span><span class="token punctuation">(</span>writeModel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//隐藏第二列</span>
    ui<span class="token operator">-&gt;</span>treeViewWrite<span class="token operator">-&gt;</span><span class="token function">hideColumn</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">connect</span><span class="token punctuation">(</span>writeModel<span class="token punctuation">,</span> <span class="token operator">&amp;</span>WriteRegisterModel<span class="token punctuation">:</span><span class="token punctuation">:</span>updateViewport<span class="token punctuation">,</span>
            ui<span class="token operator">-&gt;</span>treeViewWrite<span class="token operator">-&gt;</span><span class="token function">viewport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> QOverload<span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>QWidget<span class="token punctuation">:</span><span class="token punctuation">:</span>update<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token comment">//默认为串口连接方式</span>
    ui<span class="token operator">-&gt;</span>cbConnType<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">onConnectTypeChanged</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">auto</span> model <span class="token operator">&#61;</span> new <span class="token function">QStandardItemModel</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> this<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">&#61;</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">&#43;&#43;</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        model<span class="token operator">-&gt;</span><span class="token function">setItem</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> new <span class="token function">QStandardItem</span><span class="token punctuation">(</span><span class="token function">QStringLiteral</span><span class="token punctuation">(</span><span class="token string">&#34;%1&#34;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">arg</span><span class="token punctuation">(</span>i <span class="token operator">&#43;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    ui<span class="token operator">-&gt;</span>cbWriteCount<span class="token operator">-&gt;</span><span class="token function">setModel</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>cbWriteCount<span class="token operator">-&gt;</span><span class="token function">setCurrentText</span><span class="token punctuation">(</span><span class="token string">&#34;10&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>cbWriteCount<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QComboBox<span class="token punctuation">:</span><span class="token punctuation">:</span>currentTextChanged<span class="token punctuation">,</span>
            writeModel<span class="token punctuation">,</span> <span class="token operator">&amp;</span>WriteRegisterModel<span class="token punctuation">:</span><span class="token punctuation">:</span>setNumberOfValues<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">auto</span> valueChanged <span class="token operator">&#61;</span> QOverload<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>QSpinBox<span class="token punctuation">:</span><span class="token punctuation">:</span>valueChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>sbWriteStartAddr<span class="token punctuation">,</span> valueChanged<span class="token punctuation">,</span> writeModel<span class="token punctuation">,</span> <span class="token operator">&amp;</span>WriteRegisterModel<span class="token punctuation">:</span><span class="token punctuation">:</span>setStartAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>sbWriteStartAddr<span class="token punctuation">,</span> valueChanged<span class="token punctuation">,</span> this<span class="token punctuation">,</span> <span class="token punctuation">[</span>this<span class="token punctuation">,</span> model<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>
        <span class="token keyword">int</span> lastIndex <span class="token operator">&#61;</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> <span class="token keyword">int</span> curIndex <span class="token operator">&#61;</span> ui<span class="token operator">-&gt;</span>cbWriteCount<span class="token operator">-&gt;</span><span class="token function">currentIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">&#61;</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> j<span class="token operator">&#43;&#43;</span><span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token comment">//设置使能</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{<!-- --></span>
                lastIndex <span class="token operator">&#61;</span> j<span class="token punctuation">;</span>
                model<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{<!-- --></span>
                <span class="token comment">//设置禁用</span>
                model<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>curIndex <span class="token operator">&gt;</span> lastIndex<span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            ui<span class="token operator">-&gt;</span>cbWriteCount<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span>lastIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">//析构函数</span>
MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">~</span><span class="token function">MainWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>modbusDevice<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        modbusDevice<span class="token operator">-&gt;</span><span class="token function">disconnectDevice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        delete modbusDevice<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    delete ui<span class="token punctuation">;</span>
<span class="token punctuation">}</span>



<span class="token comment">//信号与槽进行关联s</span>
<span class="token keyword">void</span> MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">initActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token comment">//使能部分功能</span>
    ui<span class="token operator">-&gt;</span>actionConnect<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>actionDisconnect<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>actionQuit<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>actionOption<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//禁用读写操作</span>
    ui<span class="token operator">-&gt;</span>btnRead<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>btnWrite<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>btnReadWrite<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token comment">//信号与槽关联</span>
    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>btnConnect<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QPushButton<span class="token punctuation">:</span><span class="token punctuation">:</span>clicked<span class="token punctuation">,</span>
            this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span>onConnectButtonClicked<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>actionConnect<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QAction<span class="token punctuation">:</span><span class="token punctuation">:</span>triggered<span class="token punctuation">,</span>
            this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span>onConnectButtonClicked<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>actionDisconnect<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QAction<span class="token punctuation">:</span><span class="token punctuation">:</span>triggered<span class="token punctuation">,</span>
            this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span>onConnectButtonClicked<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//读操作按钮槽函数关联</span>
    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>btnRead<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QPushButton<span class="token punctuation">:</span><span class="token punctuation">:</span>clicked<span class="token punctuation">,</span>
            this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span>onReadButtonClicked<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>btnWrite<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QPushButton<span class="token punctuation">:</span><span class="token punctuation">:</span>clicked<span class="token punctuation">,</span>
            this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span>onWriteButtonClicked<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>btnReadWrite<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QPushButton<span class="token punctuation">:</span><span class="token punctuation">:</span>clicked<span class="token punctuation">,</span>
            this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span>onReadWriteButtonClicked<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>cbRegisterType<span class="token punctuation">,</span> QOverload<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>QComboBox<span class="token punctuation">:</span><span class="token punctuation">:</span>currentIndexChanged<span class="token punctuation">)</span><span class="token punctuation">,</span>
            this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span>onWriteTableChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>cbConnType<span class="token punctuation">,</span> QOverload<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>QComboBox<span class="token punctuation">:</span><span class="token punctuation">:</span>currentIndexChanged<span class="token punctuation">)</span><span class="token punctuation">,</span>
            this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span>onConnectTypeChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//退出菜单</span>
    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>actionQuit<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QAction<span class="token punctuation">:</span><span class="token punctuation">:</span>triggered<span class="token punctuation">,</span> this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span>close<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//显示参数设置对话框</span>
    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>actionOption<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QAction<span class="token punctuation">:</span><span class="token punctuation">:</span>triggered<span class="token punctuation">,</span> m_settingDialog<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QDialog<span class="token punctuation">:</span><span class="token punctuation">:</span>show<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>actionAbout<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QAction<span class="token punctuation">:</span><span class="token punctuation">:</span>triggered<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">&#61;</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>
        QMessageBox<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">aboutQt</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span> <span class="token string">&#34;About Qt&#34;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//构建请求报文</span>
QModbusDataUnit MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">readRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token comment">//const auto type &#61; static_cast&lt;QModbusDataUnit::RegisterType&gt;(ui-&gt;cbRegisterType-&gt;currentData().toInt());</span>

   QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>RegisterType type <span class="token operator">&#61;</span> QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>Invalid<span class="token punctuation">;</span>

   <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> ui<span class="token operator">-&gt;</span>cbRegisterType<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">if</span> <span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>cbRegisterType<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#61;&#61;</span> <span class="token function">QString</span><span class="token punctuation">(</span><span class="token string">&#34;线圈&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token punctuation">{<!-- --></span>
        type <span class="token operator">&#61;</span> QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>Coils<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>cbRegisterType<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#61;&#61;</span> <span class="token function">QString</span><span class="token punctuation">(</span><span class="token string">&#34;离散输入&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token punctuation">{<!-- --></span>
       type <span class="token operator">&#61;</span> QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>DiscreteInputs<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>cbRegisterType<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#61;&#61;</span> <span class="token function">QString</span><span class="token punctuation">(</span><span class="token string">&#34;输入寄存器&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token punctuation">{<!-- --></span>
       type <span class="token operator">&#61;</span> QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>InputRegisters<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>cbRegisterType<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#61;&#61;</span> <span class="token function">QString</span><span class="token punctuation">(</span><span class="token string">&#34;保持寄存器&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token punctuation">{<!-- --></span>
       type <span class="token operator">&#61;</span> QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>HoldingRegisters<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

    <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;请求报文类型: &#34;</span> <span class="token operator">&lt;&lt;</span> type<span class="token punctuation">;</span>

    <span class="token comment">//获取</span>
    <span class="token keyword">int</span> startAddress <span class="token operator">&#61;</span> ui<span class="token operator">-&gt;</span>spReadStartAddr<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">Q_ASSERT</span><span class="token punctuation">(</span>startAddress <span class="token operator">&gt;&#61;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> startAddress <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    quint16 numberOfEntries <span class="token operator">&#61;</span> ui<span class="token operator">-&gt;</span>cbReadCount<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token function">QModbusDataUnit</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> startAddress<span class="token punctuation">,</span> numberOfEntries<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">//写请求数据包封装</span>
QModbusDataUnit MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">writeRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span>
<span class="token punctuation">{<!-- --></span>
    QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>RegisterType type <span class="token operator">&#61;</span> QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>Invalid<span class="token punctuation">;</span>

    <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> ui<span class="token operator">-&gt;</span>cbRegisterType<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>cbRegisterType<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#61;&#61;</span> <span class="token function">QString</span><span class="token punctuation">(</span><span class="token string">&#34;线圈&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
         type <span class="token operator">&#61;</span> QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>Coils<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>cbRegisterType<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#61;&#61;</span> <span class="token function">QString</span><span class="token punctuation">(</span><span class="token string">&#34;离散输入&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        type <span class="token operator">&#61;</span> QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>DiscreteInputs<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>cbRegisterType<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#61;&#61;</span> <span class="token function">QString</span><span class="token punctuation">(</span><span class="token string">&#34;输入寄存器&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        type <span class="token operator">&#61;</span> QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>InputRegisters<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>cbRegisterType<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#61;&#61;</span> <span class="token function">QString</span><span class="token punctuation">(</span><span class="token string">&#34;保持寄存器&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        type <span class="token operator">&#61;</span> QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>HoldingRegisters<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

     <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;请求报文类型: &#34;</span> <span class="token operator">&lt;&lt;</span> type<span class="token punctuation">;</span>

     <span class="token comment">//获取</span>
     <span class="token keyword">int</span> startAddress <span class="token operator">&#61;</span> ui<span class="token operator">-&gt;</span>sbWriteStartAddr<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token function">Q_ASSERT</span><span class="token punctuation">(</span>startAddress <span class="token operator">&gt;&#61;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> startAddress <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

     quint16 numberOfEntries <span class="token operator">&#61;</span> ui<span class="token operator">-&gt;</span>cbWriteCount<span class="token operator">-&gt;</span><span class="token function">currentText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

     <span class="token comment">//qDebug() &lt;&lt; &#34;Test: &#34; &lt;&lt; startAddress &lt;&lt; &#34; &#34; &lt;&lt; numberOfEntries;</span>
     <span class="token keyword">return</span> <span class="token function">QModbusDataUnit</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> startAddress<span class="token punctuation">,</span> numberOfEntries<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//连接和断开连接的槽函数</span>
<span class="token keyword">void</span> MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">onConnectButtonClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>modbusDevice<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//清空状态栏消息</span>
    <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">clearMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>modbusDevice<span class="token operator">-&gt;</span><span class="token function">state</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>ConnectedState<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">auto</span> type <span class="token operator">&#61;</span> static_cast<span class="token operator">&lt;</span>ModbusConnection<span class="token operator">&gt;</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>cbConnType<span class="token operator">-&gt;</span><span class="token function">currentIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">&#61;&#61;</span> Serial<span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token comment">//设置串口连接信息</span>
            modbusDevice<span class="token operator">-&gt;</span><span class="token function">setConnectionParameter</span><span class="token punctuation">(</span>QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>SerialPortNameParameter<span class="token punctuation">,</span>
                                                 m_settingDialog<span class="token operator">-&gt;</span><span class="token function">settings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>serialName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            modbusDevice<span class="token operator">-&gt;</span><span class="token function">setConnectionParameter</span><span class="token punctuation">(</span>QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>SerialParityParameter<span class="token punctuation">,</span>
                                                 m_settingDialog<span class="token operator">-&gt;</span><span class="token function">settings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>parity<span class="token punctuation">)</span><span class="token punctuation">;</span>
            modbusDevice<span class="token operator">-&gt;</span><span class="token function">setConnectionParameter</span><span class="token punctuation">(</span>QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>SerialBaudRateParameter<span class="token punctuation">,</span>
                                                 m_settingDialog<span class="token operator">-&gt;</span><span class="token function">settings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>baud<span class="token punctuation">)</span><span class="token punctuation">;</span>
            modbusDevice<span class="token operator">-&gt;</span><span class="token function">setConnectionParameter</span><span class="token punctuation">(</span>QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>SerialDataBitsParameter<span class="token punctuation">,</span>
                                                 m_settingDialog<span class="token operator">-&gt;</span><span class="token function">settings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dataBits<span class="token punctuation">)</span><span class="token punctuation">;</span>
            modbusDevice<span class="token operator">-&gt;</span><span class="token function">setConnectionParameter</span><span class="token punctuation">(</span>QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>SerialStopBitsParameter<span class="token punctuation">,</span>
                                                 m_settingDialog<span class="token operator">-&gt;</span><span class="token function">settings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>stopBits<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token comment">//TCP连接信息</span>
            <span class="token keyword">const</span> QUrl url <span class="token operator">&#61;</span> QUrl<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">fromUserInput</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>lineEditPort<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            modbusDevice<span class="token operator">-&gt;</span><span class="token function">setConnectionParameter</span><span class="token punctuation">(</span>QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>NetworkPortParameter<span class="token punctuation">,</span>
                                                 url<span class="token punctuation">.</span><span class="token function">port</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            modbusDevice<span class="token operator">-&gt;</span><span class="token function">setConnectionParameter</span><span class="token punctuation">(</span>QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>NetworkAddressParameter<span class="token punctuation">,</span>
                                                 url<span class="token punctuation">.</span><span class="token function">host</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        modbusDevice<span class="token operator">-&gt;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span>m_settingDialog<span class="token operator">-&gt;</span><span class="token function">settings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>responseTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        modbusDevice<span class="token operator">-&gt;</span><span class="token function">setNumberOfRetries</span><span class="token punctuation">(</span>m_settingDialog<span class="token operator">-&gt;</span><span class="token function">settings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numberOfRetries<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>modbusDevice<span class="token operator">-&gt;</span><span class="token function">connectDevice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;Connect failed..&#34;</span><span class="token punctuation">)</span> <span class="token operator">&#43;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;Connect Successfully&#34;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;连接OK&#34;</span><span class="token punctuation">;</span>
            ui<span class="token operator">-&gt;</span>actionConnect<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
            ui<span class="token operator">-&gt;</span>actionDisconnect<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//使能读写操作</span>
            ui<span class="token operator">-&gt;</span>btnRead<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
            ui<span class="token operator">-&gt;</span>btnWrite<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
            ui<span class="token operator">-&gt;</span>btnReadWrite<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token comment">//断开连接</span>
        modbusDevice<span class="token operator">-&gt;</span><span class="token function">disconnectDevice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>actionConnect<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>actionDisconnect<span class="token operator">-&gt;</span><span class="token function">setDisabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;断开连接成功&#34;</span><span class="token punctuation">;</span>

        <span class="token comment">//禁用读写操作</span>
        ui<span class="token operator">-&gt;</span>btnRead<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>btnWrite<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>btnReadWrite<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">//连接类型槽函数 TCP Serial</span>
<span class="token keyword">void</span> MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">onConnectTypeChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token comment">//如果之前存在连接&#xff0c;则断开连接&#xff0c;然后释放内存</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>modbusDevice<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        modbusDevice<span class="token operator">-&gt;</span><span class="token function">disconnectDevice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        delete modbusDevice<span class="token punctuation">;</span>
        modbusDevice <span class="token operator">&#61;</span> nullptr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">auto</span> type <span class="token operator">&#61;</span> static_cast<span class="token operator">&lt;</span>ModbusConnection<span class="token operator">&gt;</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">&#61;&#61;</span> Serial<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        modbusDevice <span class="token operator">&#61;</span> new <span class="token function">QModbusRtuSerialMaster</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;new QModbusRtuSerialMaster Ok&#34;</span><span class="token punctuation">;</span>
        <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token string">&#34;new QModbusRtuSerialMaster Ok&#34;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">&#61;&#61;</span> Tcp<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        modbusDevice <span class="token operator">&#61;</span> new <span class="token function">QModbusTcpClient</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>lineEditPort<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            ui<span class="token operator">-&gt;</span>lineEditPort<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">QLatin1String</span><span class="token punctuation">(</span><span class="token string">&#34;127.0.0.1:10086&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token string">&#34;连接类型非法&#34;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">connect</span><span class="token punctuation">(</span>modbusDevice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QModbusClient<span class="token punctuation">:</span><span class="token punctuation">:</span>errorOccurred<span class="token punctuation">,</span> <span class="token punctuation">[</span>this<span class="token punctuation">]</span><span class="token punctuation">(</span>QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>Error<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>
        <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span>modbusDevice<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>modbusDevice<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token comment">//分配空间失败</span>
        ui<span class="token operator">-&gt;</span>btnConnect<span class="token operator">-&gt;</span><span class="token function">setDisabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">&#61;&#61;</span> Serial<span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;创建Modbus Master失败&#34;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;创建Modbus Client失败&#34;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">connect</span><span class="token punctuation">(</span>modbusDevice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QModbusClient<span class="token punctuation">:</span><span class="token punctuation">:</span>stateChanged<span class="token punctuation">,</span>
                this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span>onModbusStateChanged<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>


<span class="token comment">//Modbus状态改变槽函数</span>
<span class="token keyword">void</span> MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">onModbusStateChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> state<span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token comment">//判断Modbus设备连接是否处于连接状态</span>
    bool connected <span class="token operator">&#61;</span> <span class="token punctuation">(</span>state <span class="token operator">!&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>UnconnectedState<span class="token punctuation">)</span><span class="token punctuation">;</span>

    ui<span class="token operator">-&gt;</span>actionConnect<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span><span class="token operator">!</span>connected<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>actionDisconnect<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>connected<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>UnconnectedState <span class="token operator">&#61;&#61;</span> state<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        ui<span class="token operator">-&gt;</span>btnConnect<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;Connect&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        ui<span class="token operator">-&gt;</span>btnConnect<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;Disconnect&#34;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">//读操作槽函数</span>
<span class="token keyword">void</span> MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">onReadButtonClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>modbusDevice<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    ui<span class="token operator">-&gt;</span>textEditRead<span class="token operator">-&gt;</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">clearMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//发送请求报文数据</span>
    <span class="token keyword">auto</span> <span class="token operator">*</span>reply <span class="token operator">&#61;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">sendReadRequest</span><span class="token punctuation">(</span><span class="token function">readRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ui<span class="token operator">-&gt;</span>sbServerAddr<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>reply<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reply<span class="token operator">-&gt;</span><span class="token function">isFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token comment">//完毕之后 自动触发槽函数</span>
            <span class="token function">connect</span><span class="token punctuation">(</span>reply<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QModbusReply<span class="token punctuation">:</span><span class="token punctuation">:</span>finished<span class="token punctuation">,</span> this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span>onReadReady<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token comment">//广播消息  不需要返回响应</span>
            delete reply<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;Read Error: &#34;</span><span class="token punctuation">)</span> <span class="token operator">&#43;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>


<span class="token comment">//读取数据</span>
<span class="token keyword">void</span> MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">onReadReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">auto</span> reply <span class="token operator">&#61;</span> qobject_cast<span class="token operator">&lt;</span>QModbusReply<span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token function">sender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reply<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#61;&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>NoError<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">const</span> QModbusDataUnit data <span class="token operator">&#61;</span> reply<span class="token operator">-&gt;</span><span class="token function">result</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">&#61;</span> <span class="token number">0</span><span class="token punctuation">,</span> total <span class="token operator">&#61;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>data<span class="token punctuation">.</span><span class="token function">valueCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> total<span class="token punctuation">;</span> i<span class="token operator">&#43;&#43;</span><span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token keyword">const</span> QString str <span class="token operator">&#61;</span> <span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;Address: %1 Value: %2&#34;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">arg</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">startAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#43;</span> i<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">arg</span><span class="token punctuation">(</span>QString<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">number</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">registerType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&#61;</span> QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>Coils <span class="token operator">?</span> <span class="token number">10</span> <span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            ui<span class="token operator">-&gt;</span>textEditRead<span class="token operator">-&gt;</span><span class="token function">append</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#61;&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>ProtocolError<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;Read response error: %1 (Modbus exception: 0x%2)&#34;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                                 <span class="token function">arg</span><span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                                 <span class="token function">arg</span><span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">rawResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exceptionCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;Read response error: %1 (Code: 0x%2)&#34;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                                 <span class="token function">arg</span><span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                                 <span class="token function">arg</span><span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token comment">//释放内存</span>
    reply<span class="token operator">-&gt;</span><span class="token function">deleteLater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">onWriteButtonClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>modbusDevice<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">clearMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    QModbusDataUnit writeData <span class="token operator">&#61;</span> <span class="token function">writeRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>RegisterType type <span class="token operator">&#61;</span> writeData<span class="token punctuation">.</span><span class="token function">registerType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//qDebug() &lt;&lt; &#34;test: &#34; &lt;&lt; writeData.valueCount();</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">&#61;</span> <span class="token number">0</span><span class="token punctuation">,</span> total <span class="token operator">&#61;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>writeData<span class="token punctuation">.</span><span class="token function">valueCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> total<span class="token punctuation">;</span> i<span class="token operator">&#43;&#43;</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">&#61;&#61;</span> QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>Coils<span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            writeData<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> writeModel<span class="token operator">-&gt;</span>m_coils<span class="token punctuation">[</span>i <span class="token operator">&#43;</span> writeData<span class="token punctuation">.</span><span class="token function">startAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token comment">//qDebug() &lt;&lt; &#34;test: &#34; &lt;&lt; writeModel-&gt;m_holdingRegisters[i &#43; writeData.startAddress()];</span>
            writeData<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> writeModel<span class="token operator">-&gt;</span>m_holdingRegisters<span class="token punctuation">[</span>i <span class="token operator">&#43;</span> writeData<span class="token punctuation">.</span><span class="token function">startAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;写数据内容为&#xff1a;&#34;</span> <span class="token operator">&lt;&lt;</span> writeData<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//发送请求报文数据</span>
    <span class="token keyword">auto</span> <span class="token operator">*</span>reply <span class="token operator">&#61;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">sendWriteRequest</span><span class="token punctuation">(</span>writeData<span class="token punctuation">,</span> ui<span class="token operator">-&gt;</span>sbServerAddr<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>reply<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reply<span class="token operator">-&gt;</span><span class="token function">isFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token comment">//完毕之后 自动触发槽函数</span>
            <span class="token function">connect</span><span class="token punctuation">(</span>reply<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QModbusReply<span class="token punctuation">:</span><span class="token punctuation">:</span>finished<span class="token punctuation">,</span> this<span class="token punctuation">,</span> <span class="token punctuation">[</span>this<span class="token punctuation">,</span> reply<span class="token punctuation">]</span><span class="token punctuation">{<!-- --></span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#61;&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>ProtocolError<span class="token punctuation">)</span>
                <span class="token punctuation">{<!-- --></span>
                    <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;Write Protocaol response error: %1&#34;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">arg</span><span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>NoError<span class="token punctuation">)</span>
                <span class="token punctuation">{<!-- --></span>
                    <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;Write response error: %1&#34;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">arg</span><span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span>
                <span class="token punctuation">{<!-- --></span>
                    <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;写响应的数据: &#34;</span> <span class="token operator">&lt;&lt;</span> reply<span class="token operator">-&gt;</span><span class="token function">result</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                reply<span class="token operator">-&gt;</span><span class="token function">deleteLater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token comment">//广播消息  不需要返回响应</span>
            reply<span class="token operator">-&gt;</span><span class="token function">deleteLater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;Write Error: &#34;</span><span class="token punctuation">)</span> <span class="token operator">&#43;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">//读写按钮槽函数</span>
<span class="token keyword">void</span> MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">onReadWriteButtonClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>modbusDevice<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">clearMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    QModbusDataUnit writeData <span class="token operator">&#61;</span> <span class="token function">writeRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>RegisterType type <span class="token operator">&#61;</span> writeData<span class="token punctuation">.</span><span class="token function">registerType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//qDebug() &lt;&lt; &#34;test: &#34; &lt;&lt; writeData.valueCount();</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">&#61;</span> <span class="token number">0</span><span class="token punctuation">,</span> total <span class="token operator">&#61;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>writeData<span class="token punctuation">.</span><span class="token function">valueCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> total<span class="token punctuation">;</span> i<span class="token operator">&#43;&#43;</span><span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">&#61;&#61;</span> QModbusDataUnit<span class="token punctuation">:</span><span class="token punctuation">:</span>Coils<span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            writeData<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> writeModel<span class="token operator">-&gt;</span>m_coils<span class="token punctuation">[</span>i <span class="token operator">&#43;</span> writeData<span class="token punctuation">.</span><span class="token function">startAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token comment">//qDebug() &lt;&lt; &#34;test: &#34; &lt;&lt; writeModel-&gt;m_holdingRegisters[i &#43; writeData.startAddress()];</span>
            writeData<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> writeModel<span class="token operator">-&gt;</span>m_holdingRegisters<span class="token punctuation">[</span>i <span class="token operator">&#43;</span> writeData<span class="token punctuation">.</span><span class="token function">startAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;写数据内容为&#xff1a;&#34;</span> <span class="token operator">&lt;&lt;</span> writeData<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//发送请求报文数据</span>
    <span class="token keyword">auto</span> <span class="token operator">*</span>reply <span class="token operator">&#61;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">sendReadWriteRequest</span><span class="token punctuation">(</span><span class="token function">readRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> writeData<span class="token punctuation">,</span> ui<span class="token operator">-&gt;</span>sbServerAddr<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>reply<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reply<span class="token operator">-&gt;</span><span class="token function">isFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token function">connect</span><span class="token punctuation">(</span>reply<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QModbusReply<span class="token punctuation">:</span><span class="token punctuation">:</span>finished<span class="token punctuation">,</span> this<span class="token punctuation">,</span> <span class="token operator">&amp;</span>MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span>onReadReady<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//完毕之后 自动触发槽函数</span>
            <span class="token function">connect</span><span class="token punctuation">(</span>reply<span class="token punctuation">,</span> <span class="token operator">&amp;</span>QModbusReply<span class="token punctuation">:</span><span class="token punctuation">:</span>finished<span class="token punctuation">,</span> this<span class="token punctuation">,</span> <span class="token punctuation">[</span>this<span class="token punctuation">,</span> reply<span class="token punctuation">]</span><span class="token punctuation">{<!-- --></span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&#61;&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>ProtocolError<span class="token punctuation">)</span>
                <span class="token punctuation">{<!-- --></span>
                    <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;Write Protocaol response error: %1&#34;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">arg</span><span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!&#61;</span> QModbusDevice<span class="token punctuation">:</span><span class="token punctuation">:</span>NoError<span class="token punctuation">)</span>
                <span class="token punctuation">{<!-- --></span>
                    <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;Write response error: %1&#34;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">arg</span><span class="token punctuation">(</span>reply<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">else</span>
                <span class="token punctuation">{<!-- --></span>
                    <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#34;写响应的数据: &#34;</span> <span class="token operator">&lt;&lt;</span> reply<span class="token operator">-&gt;</span><span class="token function">result</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                reply<span class="token operator">-&gt;</span><span class="token function">deleteLater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{<!-- --></span>
            <span class="token comment">//广播消息  不需要返回响应</span>
            reply<span class="token operator">-&gt;</span><span class="token function">deleteLater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{<!-- --></span>
        <span class="token function">statusBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token function">tr</span><span class="token punctuation">(</span><span class="token string">&#34;Write Error: &#34;</span><span class="token punctuation">)</span> <span class="token operator">&#43;</span> modbusDevice<span class="token operator">-&gt;</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> MainWindow<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">onWriteTableChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span>
<span class="token punctuation">{<!-- --></span>
    <span class="token keyword">const</span> bool coilsOrHolding <span class="token operator">&#61;</span> index <span class="token operator">&#61;&#61;</span> <span class="token number">0</span> <span class="token operator">||</span> index <span class="token operator">&#61;&#61;</span> <span class="token number">3</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>coilsOrHolding<span class="token punctuation">)</span>
    <span class="token punctuation">{<!-- --></span>
        ui<span class="token operator">-&gt;</span>treeViewWrite<span class="token operator">-&gt;</span><span class="token function">setColumnHidden</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> index <span class="token operator">!&#61;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>treeViewWrite<span class="token operator">-&gt;</span><span class="token function">setColumnHidden</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> index <span class="token operator">!&#61;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>treeViewWrite<span class="token operator">-&gt;</span><span class="token function">resizeColumnToContents</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    ui<span class="token operator">-&gt;</span>btnReadWrite<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>index <span class="token operator">&#61;&#61;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>btnWrite<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>coilsOrHolding<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>groupBox_2<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>coilsOrHolding<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


</code></pre> 
<h2><a id="08__1395"></a>08. 程序下载</h2> 
<p><a href="https://download.csdn.net/download/dengjin20104042056/18907110">QModbus TCP模式客户端读操作(一).rar</a></p> 
<p><a href="https://download.csdn.net/download/dengjin20104042056/18907712">QModbus TCP模式综合操作(二).rar</a></p> 
<h2><a id="09__1403"></a>09. 附录</h2> 
<p><strong>9.1 Qt教程汇总</strong><br /> 网址&#xff1a;<a href="https://dengjin.blog.csdn.net/article/details/115174639">https://dengjin.blog.csdn.net/article/details/115174639</a></p>
                </div>
                <link href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-98b95bb57c.css" rel="stylesheet">
                <link href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-c216769e99.css" rel="stylesheet">
        </div>
        <div id="treeSkill"></div>
    </article>
<script>
  $(function() {
    setTimeout(function () {
      var mathcodeList = document.querySelectorAll('.htmledit_views img.mathcode');
      if (mathcodeList.length > 0) {
        for (let i = 0; i < mathcodeList.length; i++) {
          if (mathcodeList[i].naturalWidth === 0 || mathcodeList[i].naturalHeight === 0) {
            var alt = mathcodeList[i].alt;
            alt = '\\(' + alt + '\\)';
            var curSpan = $('<span class="img-codecogs"></span>');
            curSpan.text(alt);
            $(mathcodeList[i]).before(curSpan);
            $(mathcodeList[i]).remove();
          }
        }
        MathJax.Hub.Queue(["Typeset",MathJax.Hub]);
      }
    }, 1000)
  });
</script>
</div>
    <div class="more-toolbox-new" id="toolBarBox">
      <div class="write-guide-buttom-box">
        阅读终点，创作起航，您可以撰写心得或摘录文章要点写篇博文。<a data-report-view='{"spm":"3001.9734"}' data-report-click='{"spm":"3001.9734"}' data-report-query="spm=3001.9734" href="https://mp.csdn.net/edit" target="_blank">去创作<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/iconRight.png" alt=""></a>
        <button class="btn-close" data-report-view='{"spm":"3001.9735"}' data-report-click='{"spm":"3001.9735"}'>
          <img src="https://csdnimg.cn/release/blogv2/dist/pc/img/closeQuestion.png" alt="">
        </button>
      </div>
      <div class="left-toolbox">
        <div class="toolbox-left">
            <div class="profile-box">
              <a class="profile-href" target="_blank" href="https://dengjin.blog.csdn.net"><img class="profile-img" src="https://profile-avatar.csdnimg.cn/6137607fbdad4a0d9e302cbab2d548cc_dengjin20104042056.jpg!1">
                <span class="profile-name">
                  沧海一笑-dj
                </span>
              </a>
            </div>
            <div class="profile-attend">
              
                <a class="tool-attend tool-bt-button tool-bt-attend" href="javascript:;" data-report-view='{"mod":"1592215036_002","spm":"1001.2101.3001.4232","extend1":"关注"}'>关注</a>
              <a class="tool-item-follow active-animation" style="display:none;">关注</a>
            </div>
        </div>
        <div class="toolbox-middle">
          <ul class="toolbox-list">
            <li class="tool-item tool-item-size tool-active is-like" id="is-like">
              <a class="tool-item-href">
                <img style="display:none;" id="is-like-imgactive-animation-like" class="animation-dom active-animation" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarThumbUpactive.png" alt="">
                <img class="isactive" style="display:none" id="is-like-imgactive" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newHeart2021Active.png" alt="">
                <img class="isdefault" style="display:block" id="is-like-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newHeart2021Black.png" alt="">
                <span id="spanCount" class="count ">
                    4
                </span>
              </a>
              <div class="tool-hover-tip"><span class="text space">点赞</span></div>
            </li>
            <li class="tool-item tool-item-size tool-active is-unlike" id="is-unlike">
              <a class="tool-item-href">
                <img class="isactive" style="margin-right:0px;display:none" id="is-unlike-imgactive" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newUnHeart2021Active.png" alt="">
                <img class="isdefault" style="margin-right:0px;display:block" id="is-unlike-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newUnHeart2021Black.png" alt="">
                <span id="unlikeCount" class="count "></span>
              </a>
              <div class="tool-hover-tip"><span class="text space">踩</span></div>
            </li>
            <li class="tool-item tool-item-size tool-active is-collection ">
              <a class="tool-item-href" href="javascript:;" data-report-click='{"mod":"popu_824","spm":"1001.2101.3001.4130","ab":"new"}'>
                <img style="display:none" id="is-collection-img-collection" class="animation-dom active-animation" src="https://csdnimg.cn/release/blogv2/dist/pc/img/tobarCollectionActive.png" alt="">
                <img class="isdefault" id="is-collection-img" style="display:block" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCollectBlack.png" alt="">
                <img class="isactive" id="is-collection-imgactive" style="display:none" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newCollectActive.png" alt="">
                <span class="count get-collection " id="get-collection">
                    39
                </span>
              </a>
              <div class="tool-hover-tip collect">
                <div class="collect-operate-box">
                  <span class="collect-text" id="is-collection">
                    收藏
                  </span>
                </div>
              </div>
              <div class="tool-active-list">
                <div class="text">
                  觉得还不错?
                  <span class="collect-text" id="tool-active-list-collection">
                    一键收藏
                  </span>
                 <img id="tool-active-list-close" src="https://csdnimg.cn/release/blogv2/dist/pc/img/collectionCloseWhite.png" alt="">
                </div>
              </div>
            </li>
                <li class="tool-item tool-item-size tool-active tool-item-reward">
                  <a class="tool-item-href" href="javascript:;" data-report-click='{"mod":"popu_830","spm":"1001.2101.3001.4237","dest":"","ab":"new"}'>
                    <img class="isdefault reward-bt" id="rewardBtNew" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newRewardBlack.png" alt="打赏">
                    <span class="count"></span>
                  </a>
                  <div class="tool-hover-tip"><span class="text space">打赏</span></div>
                </li>
          <li class="tool-item tool-item-size tool-active tool-item-comment">
            <div class="guide-rr-first">
              <img src="https://csdnimg.cn/release/blogv2/dist/pc/img/guideRedReward01.png" alt="">
              <button class="btn-guide-known">知道了</button>
            </div>
              <a class="tool-item-href" href="#commentBox" data-report-click='{"spm":"1001.2101.3001.7009"}'>
              <img class="isdefault" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newComment2021Black.png" alt="">
              <span class="count">
                  9
              </span>
            </a>
            <div class="tool-hover-tip"><span class="text space">评论</span></div>
          </li>
          <li class="tool-item tool-item-bar">
          </li>
          <li class="tool-item tool-item-size tool-active tool-QRcode" data-type="article" id="tool-share">
            <a class="tool-item-href" href="javascript:;" data-report-click='{"mod":"1582594662_002","spm":"1001.2101.3001.4129","ab":"new"}'>
              <img class="isdefault" src="https://csdnimg.cn/release/blogv2/dist/pc/img/newShareBlack.png" alt="">
            </a>
              <div class="QRcode" id="tool-QRcode">
            <div class="share-bg-icon icon1" id="shareBgIcon"></div>
              <div class="share-bg-box">
                <div class="share-content">
                    <img class="share-avatar" src="https://profile-avatar.csdnimg.cn/6137607fbdad4a0d9e302cbab2d548cc_dengjin20104042056.jpg!1" alt="">
                  <div class="share-tit">
                    【Qt】modbus之TCP模式读操作
                  </div>
                  <div class="share-dec">
                    00. 目录文章目录00. 目录01. 概述02. 开发环境03. 读Coils程序示例04. 读DiscreteInputs程序示例05. 读InputRegisters程序示例06. 读HoldingRegisters程序示例07. 综合示例08. 程序下载09. 附录01. 概述Qt中几个常用的串口modbus类QModbusRtuSerialSlave       //modbus串口通信方式下的服务器类QModbusRtuSerialMaster      //串口通信方式下的客户端类
                  </div>
                  <a id="copyPosterUrl" class="url" data-report-click='{"spm":"1001.2101.3001.7493"}' data-report-view='{"spm":"1001.2101.3001.7493"}'>复制链接</a>
                </div>
                <div class="share-code">
                  <div class="share-code-box" id='shareCode'></div>
                  <div class="share-code-text">扫一扫</div>
                </div>
              </div>
                <div class="share-code-type">
                </div>
            </div>
          </li>
        </ul>
      </div>
      <div class="toolbox-right">
            <div class="tool-directory">
                <a class="bt-columnlist-show"
                  data-id="1737479"
                  data-free="true"
                  data-subscribe="false"
                  data-title="Qt"
                  data-img="https://img-blog.csdnimg.cn/20190829173126794.jfif?x-oss-process=image/resize,m_fixed,h_224,w_224"
                  data-url="https://blog.csdn.net/dengjin20104042056/category_1737479.html"
                  data-sum="164"
                  data-people="318"
                  data-price="0"
                  data-oldprice="0"
                  data-join="false"
                  data-studyvip="false"
                  data-studysubscribe="false"
                  data-report-view='{"spm":"1001.2101.3001.6334","extend1":"专栏目录"}'
                  data-report-click='{"spm":"1001.2101.3001.6334","extend1":"专栏目录"}'>专栏目录</a>
          </div>
</div>
</div>
</div>
<script type=text/javascript crossorigin src="https://csdnimg.cn/release/phoenix/production/qrcode-7c90a92189.min.js"></script>
<script src="//g.csdnimg.cn/??sharewx/1.2.1/sharewx.js" type="text/javascript"></script>
<script type="text/javascript" crossorigin src="https://g.csdnimg.cn/common/csdn-login-box/csdn-login-box.js"></script>
<script type="text/javascript" crossorigin src="https://g.csdnimg.cn/collection-box/2.1.2/collection-box.js"></script>                <div class="first-recommend-box recommend-box ">
<div class="recommend-item-box type_download clearfix" data-url="https://download.csdn.net/download/weixin_46252634/86239504"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6661.1","mod":"popu_871","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant_t0.none-task-download-2~default~OPENSEARCH~Rate-1-86239504-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"1","strategy":"2~default~OPENSEARCH~Rate","dest":"https://download.csdn.net/download/weixin_46252634/86239504"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://download.csdn.net/download/weixin_46252634/86239504" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6661.1","mod":"popu_871","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant_t0.none-task-download-2~default~OPENSEARCH~Rate-1-86239504-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"1","strategy":"2~default~OPENSEARCH~Rate","dest":"https://download.csdn.net/download/weixin_46252634/86239504"}'  data-report-query='spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-1-86239504-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant_t0.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-1-86239504-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1">基于<em>qt</em>的<em>modbus</em><em>tcp</em>主站</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info display-flex">
					<span class="info-block">07-17</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://download.csdn.net/download/weixin_46252634/86239504" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6661.1","mod":"popu_871","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant_t0.none-task-download-2~default~OPENSEARCH~Rate-1-86239504-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"1","strategy":"2~default~OPENSEARCH~Rate","dest":"https://download.csdn.net/download/weixin_46252634/86239504"}'  data-report-query='spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-1-86239504-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant_t0.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-1-86239504-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">通过主站可以和串口助手连接，也可以和自己写的从站连接</div>
			</a>
		</div>
	</div>
</div>
                </div>
              <script src="https://csdnimg.cn/release/blogv2/dist/components/js/pc_wap_commontools-094b8ec121.min.js" type="text/javascript" async></script>
                <div class="second-recommend-box recommend-box ">
<div class="recommend-item-box type_download clearfix" data-url="https://download.csdn.net/download/mr_liyonghong/11566021"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.1","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-1-11566021-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"1","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/mr_liyonghong/11566021"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://download.csdn.net/download/mr_liyonghong/11566021" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.1","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-1-11566021-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"1","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/mr_liyonghong/11566021"}'  data-report-query='spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-1-11566021-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-1-11566021-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1"><em>qt</em>下的<em>modbus</em> <em>Tcp</em>通讯程序</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info display-flex">
					<span class="info-block">08-16</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://download.csdn.net/download/mr_liyonghong/11566021" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.1","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-1-11566021-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"1","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/mr_liyonghong/11566021"}'  data-report-query='spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-1-11566021-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-1-11566021-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1"><em>qt</em>下实现了<em>modbus</em> <em>tcp</em>通讯协议，能够通过<em>modbus</em>协议控制底层硬件工作，该代码可以用于PLC等硬件的控制，运行环境vs2017+<em>QT</em>5.1.12</div>
			</a>
		</div>
	</div>
</div>
                </div>
<a id="commentBox" name="commentBox"></a>
<div id="pcCommentBox" class="comment-box comment-box-new2 unlogin-comment-box-new" style="display:none">
    <div class="unlogin-comment-model">
        <span class="unlogin-comment-tit">9&nbsp;条评论</span>
      <span class="unlogin-comment-text">您还未登录，请先</span>
      <span class="unlogin-comment-bt">登录</span>
      <span class="unlogin-comment-text">后发表或查看评论</span>
    </div>
</div>              <div class="recommend-box insert-baidu-box recommend-box-style ">
                <div class="recommend-item-box no-index" style="display:none"></div>
<div class="recommend-item-box type_download clearfix" data-url="https://download.csdn.net/download/weixin_37891650/19095230"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.2","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~OPENSEARCH~Rate-2-19095230-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"2","strategy":"2~default~OPENSEARCH~Rate","dest":"https://download.csdn.net/download/weixin_37891650/19095230"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://download.csdn.net/download/weixin_37891650/19095230" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.2","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~OPENSEARCH~Rate-2-19095230-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"2","strategy":"2~default~OPENSEARCH~Rate","dest":"https://download.csdn.net/download/weixin_37891650/19095230"}'  data-report-query='spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-2-19095230-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-2-19095230-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1"><em>qt</em>_<em>modbus</em><em>TCP</em>_demo.rar</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info display-flex">
					<span class="info-block">05-26</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://download.csdn.net/download/weixin_37891650/19095230" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.2","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~OPENSEARCH~Rate-2-19095230-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"2","strategy":"2~default~OPENSEARCH~Rate","dest":"https://download.csdn.net/download/weixin_37891650/19095230"}'  data-report-query='spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-2-19095230-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-2-19095230-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">Linux下<em>qt</em>实现C++和PLC通过<em>modbus</em><em>TCP</em>通讯，<em>读</em>写线圈、存储寄存器。</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/weixin_44894312/article/details/108197280"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.3","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-108197280-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"3","strategy":"2~default~CTRLIST~Rate","dest":"https://blog.csdn.net/weixin_44894312/article/details/108197280"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/weixin_44894312/article/details/108197280" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.3","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-108197280-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"3","strategy":"2~default~CTRLIST~Rate","dest":"https://blog.csdn.net/weixin_44894312/article/details/108197280"}'  data-report-query='spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-3-108197280-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-3-108197280-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1"><em>QT</em>下的<em>Modbus</em> <em>TCP</em> 通讯</div>
					<div class="tag">热门推荐</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/weixin_44894312" target="_blank"><span class="blog-title">weixin_44894312的博客</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">08-24</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					2万+
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/weixin_44894312/article/details/108197280" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.3","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-108197280-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"3","strategy":"2~default~CTRLIST~Rate","dest":"https://blog.csdn.net/weixin_44894312/article/details/108197280"}'  data-report-query='spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-3-108197280-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-3-108197280-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">文章目录前言一、关于<em>Modbus</em>二、<em>Modbus</em> <em>TCP</em> Master的实现1.封装自己的<em>Modbus</em>类2.<em>Modbus</em> 通过<em>TCP</em>/IP进行连接3.<em>Modbus</em> 通过<em>TCP</em>/IP<em>读</em>取数据（1）<em>读</em>取线圈数据（2）<em>读</em>取保持寄存器数据（3）给线圈写入数据（4）给保持寄存器写数据总结

前言
<em>Modbus</em>在工业控制中的应用非常多，由于其免费使用加上一定的历史环境，<em>Modbus</em>在PLC上的通讯应用非常多，本文主要介绍Mosbus <em>TCP</em> master（主站）的实现。

一、关于<em>Modbus</em>
<em>Modbus</em>是由MOD.</div>
			</a>
		</div>
	</div>
</div>
		<dl id="recommend-item-box-tow" class="recommend-item-box type_blog clearfix">
			
		</dl>
<div class="recommend-item-box type_download clearfix" data-url="https://download.csdn.net/download/u013083044/85402497"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.4","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-4-85402497-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"4","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/u013083044/85402497"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://download.csdn.net/download/u013083044/85402497" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.4","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-4-85402497-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"4","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/u013083044/85402497"}'  data-report-query='spm=1001.2101.3001.6650.4&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-4-85402497-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-4-85402497-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1"><em>QT</em>/C++ <em>modbus</em>e 通讯库，批量<em>读</em>写，不阻塞</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info display-flex">
					<span class="info-block">05-17</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://download.csdn.net/download/u013083044/85402497" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.4","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-4-85402497-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"4","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/u013083044/85402497"}'  data-report-query='spm=1001.2101.3001.6650.4&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-4-85402497-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-4-85402497-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">1、<em>QT</em>/C++ <em>modbus</em>e 通讯库；
2、批量<em>读</em>写，不阻塞
3、后台线程批量<em>读</em>写</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/haohaoganhuo/article/details/125262123"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.5","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-5-125262123-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"5","strategy":"2~default~CTRLIST~Rate","dest":"https://blog.csdn.net/haohaoganhuo/article/details/125262123"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/haohaoganhuo/article/details/125262123" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.5","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-5-125262123-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"5","strategy":"2~default~CTRLIST~Rate","dest":"https://blog.csdn.net/haohaoganhuo/article/details/125262123"}'  data-report-query='spm=1001.2101.3001.6650.5&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-5-125262123-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-5-125262123-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1">使用<em>QT</em>编写<em>MODBUS</em>-<em>TCP</em>服务器与客户端程序</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/haohaoganhuo" target="_blank"><span class="blog-title">haohaoganhuo的专栏</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">06-13</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					4863
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/haohaoganhuo/article/details/125262123" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.5","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-5-125262123-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"5","strategy":"2~default~CTRLIST~Rate","dest":"https://blog.csdn.net/haohaoganhuo/article/details/125262123"}'  data-report-query='spm=1001.2101.3001.6650.5&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-5-125262123-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-5-125262123-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">这个系列文章的主要目的还是要记录我熟悉<em>QT</em>编程的一个过程，同时也可以让其他开始使用<em>QT</em>编程的人有一个参考，少走些弯路。基于以上目的，我就从我所擅长的工业数据采集入手，用<em>QT</em>编写一个和数据采集有关的程序。在工业数据采集领域，<em>MODBUS</em>是一种应用广泛的总线协议，非常适合应用在低速采集的领域，早期的<em>MODBUS</em>协议只支持串口，后来发展出基于以太网口的<em>MODBUS</em>-<em>TCP</em>协议，我最终要用<em>QT</em>实现的，就是一个<em>MODBUS</em>-<em>TCP</em>服务器，以及与之通讯的<em>MODBUS</em>-<em>TCP</em>客户端。协议相关资料请看
<em>MODBUS</em>-<em>TCP</em></div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_download clearfix" data-url="https://download.csdn.net/download/a591948354/74726659"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.6","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-6-74726659-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"6","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/a591948354/74726659"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://download.csdn.net/download/a591948354/74726659" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.6","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-6-74726659-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"6","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/a591948354/74726659"}'  data-report-query='spm=1001.2101.3001.6650.6&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-6-74726659-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-6-74726659-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1"><em>QT</em>5多线程<em>TCP</em>服务器和客户端demo</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info display-flex">
					<span class="info-block">01-07</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://download.csdn.net/download/a591948354/74726659" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.6","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-6-74726659-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"6","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/a591948354/74726659"}'  data-report-query='spm=1001.2101.3001.6650.6&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-6-74726659-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-6-74726659-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1"><em>QT</em>5多线程<em>TCP</em>服务器和客户端demo</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_download clearfix" data-url="https://download.csdn.net/download/qq_35893001/33372958"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.7","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~OPENSEARCH~Rate-7-33372958-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"7","strategy":"2~default~OPENSEARCH~Rate","dest":"https://download.csdn.net/download/qq_35893001/33372958"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://download.csdn.net/download/qq_35893001/33372958" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.7","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~OPENSEARCH~Rate-7-33372958-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"7","strategy":"2~default~OPENSEARCH~Rate","dest":"https://download.csdn.net/download/qq_35893001/33372958"}'  data-report-query='spm=1001.2101.3001.6650.7&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-7-33372958-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-7-33372958-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1"><em>Qt</em> creator <em>MODBUS</em> <em>TCP</em>客户端<em>读</em>取数据应用软件（附带详细说明）</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info display-flex">
					<span class="info-block">10-19</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://download.csdn.net/download/qq_35893001/33372958" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.7","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~OPENSEARCH~Rate-7-33372958-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"7","strategy":"2~default~OPENSEARCH~Rate","dest":"https://download.csdn.net/download/qq_35893001/33372958"}'  data-report-query='spm=1001.2101.3001.6650.7&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-7-33372958-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7EOPENSEARCH%7ERate-7-33372958-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">主要完成连接、数据采集、数据显示，附带详细说明，可以自行修改，<em>Qt</em>版本5.9。</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_download clearfix" data-url="https://download.csdn.net/download/weixin_44671179/62549236"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.8","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-8-62549236-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"8","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/weixin_44671179/62549236"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://download.csdn.net/download/weixin_44671179/62549236" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.8","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-8-62549236-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"8","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/weixin_44671179/62549236"}'  data-report-query='spm=1001.2101.3001.6650.8&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-8-62549236-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-8-62549236-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1"><em>Qt</em>使用<em>Modbus</em><em>Tcp</em>与汇川PLC通讯</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info display-flex">
					<span class="info-block">12-13</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://download.csdn.net/download/weixin_44671179/62549236" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.8","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-8-62549236-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"8","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/weixin_44671179/62549236"}'  data-report-query='spm=1001.2101.3001.6650.8&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-8-62549236-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-8-62549236-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">自动生成报文，只需输入IP地址与端口号即可使用，支持real（float）数据类型、INT数据类型、DINT数据类型、bool数据类型、string数据类型进行<em>读</em>写</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_download clearfix" data-url="https://download.csdn.net/download/dengjin20104042056/18907712"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.9","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~BlogCommendFromBaidu~Rate-9-18907712-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"9","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://download.csdn.net/download/dengjin20104042056/18907712"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://download.csdn.net/download/dengjin20104042056/18907712" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.9","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~BlogCommendFromBaidu~Rate-9-18907712-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"9","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://download.csdn.net/download/dengjin20104042056/18907712"}'  data-report-query='spm=1001.2101.3001.6650.9&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7EBlogCommendFromBaidu%7ERate-9-18907712-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7EBlogCommendFromBaidu%7ERate-9-18907712-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1">Q<em>Modbus</em> <em>TCP</em><em>模式</em>综合<em>操作</em>(二).rar</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info display-flex">
					<span class="info-block">05-20</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://download.csdn.net/download/dengjin20104042056/18907712" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.9","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~BlogCommendFromBaidu~Rate-9-18907712-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"9","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://download.csdn.net/download/dengjin20104042056/18907712"}'  data-report-query='spm=1001.2101.3001.6650.9&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7EBlogCommendFromBaidu%7ERate-9-18907712-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7EBlogCommendFromBaidu%7ERate-9-18907712-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">Q<em>Modbus</em> <em>TCP</em><em>模式</em>综合<em>操作</em>(二).rar  Q<em>Modbus</em> <em>TCP</em><em>模式</em>综合示例</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/weixin_39510813/article/details/115037065"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.10","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-10-115037065-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"10","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://blog.csdn.net/weixin_39510813/article/details/115037065"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/weixin_39510813/article/details/115037065" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.10","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-10-115037065-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"10","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://blog.csdn.net/weixin_39510813/article/details/115037065"}'  data-report-query='spm=1001.2101.3001.6650.10&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-10-115037065-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-10-115037065-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1">利用<em>Qt</em>5已有Q<em>Modbus</em>相关类实现<em>Modbus</em><em>Tcp</em>Server总结</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/weixin_39510813" target="_blank"><span class="blog-title">逍遥游的博客</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">03-20</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					5364
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/weixin_39510813/article/details/115037065" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.10","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-10-115037065-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"10","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://blog.csdn.net/weixin_39510813/article/details/115037065"}'  data-report-query='spm=1001.2101.3001.6650.10&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-10-115037065-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-10-115037065-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">利用<em>Qt</em>5已有Q<em>Modbus</em>相关类实现<em>Modbus</em><em>Tcp</em>Server总结

文章目录利用<em>Qt</em>5已有Q<em>Modbus</em>相关类实现<em>Modbus</em><em>Tcp</em>Server总结1、<em>Modbus</em>/<em>TCP</em>协议简单了解2、<em>Qt</em>5 <em>Modbus</em>客户机（master主）服务器（slave从）实现示例分析学习（1）、搜索<em>Modbus</em>（2）、运行后结果（3）、slave代码分析（4）、master代码分析（5）、Q<em>Modbus</em>Server和Q<em>Modbus</em>Client类了解3、实现一个<em>modbus</em>/<em>tcp</em>服务进行测试
在疫情环境下催生出了很多</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/m0_37827925/article/details/100696769"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.11","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-11-100696769-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"11","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://blog.csdn.net/m0_37827925/article/details/100696769"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/m0_37827925/article/details/100696769" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.11","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-11-100696769-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"11","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://blog.csdn.net/m0_37827925/article/details/100696769"}'  data-report-query='spm=1001.2101.3001.6650.11&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-11-100696769-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-11-100696769-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1">Q<em>Modbus</em>Server</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/m0_37827925" target="_blank"><span class="blog-title">咸的豆腐包</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">09-11</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					1955
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/m0_37827925/article/details/100696769" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.11","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-11-100696769-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"11","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://blog.csdn.net/m0_37827925/article/details/100696769"}'  data-report-query='spm=1001.2101.3001.6650.11&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-11-100696769-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-11-100696769-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">目录数据setData重载一：重载二：writeData
数据
setData
重载一：
将数据写入<em>Modbus</em>服务器。
<em>Modbus</em>服务器有四个表(\ A表)，每个表有一个唯一的\a地址字段，用于将\a数据写入所需的字段。如果地址不在地图范围内，返回\c false。
如果调用成功，将发出\l dataWritten()信号。请注意,当\a数据没有更改时，不会发出信号。不过这个函数在这种情况下返...</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_download clearfix" data-url="https://download.csdn.net/download/dengjin20104042056/18908424"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.12","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-12-18908424-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"12","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/dengjin20104042056/18908424"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://download.csdn.net/download/dengjin20104042056/18908424" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.12","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-12-18908424-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"12","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/dengjin20104042056/18908424"}'  data-report-query='spm=1001.2101.3001.6650.12&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-12-18908424-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-12-18908424-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1">Q<em>Modbus</em> <em>TCP</em><em>模式</em>写<em>操作</em>示例(一).rar</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info display-flex">
					<span class="info-block">05-20</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://download.csdn.net/download/dengjin20104042056/18908424" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.12","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-download-2~default~CTRLIST~Rate-12-18908424-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"12","strategy":"2~default~CTRLIST~Rate","dest":"https://download.csdn.net/download/dengjin20104042056/18908424"}'  data-report-query='spm=1001.2101.3001.6650.12&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-12-18908424-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7ERate-12-18908424-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">Q<em>Modbus</em> <em>TCP</em><em>模式</em>写<em>操作</em>示例(一).rar  <em>TCP</em><em>模式</em>所有写<em>操作</em>示例</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/dfy1407/article/details/88229807"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.13","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-13-88229807-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"13","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://blog.csdn.net/dfy1407/article/details/88229807"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/dfy1407/article/details/88229807" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.13","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-13-88229807-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"13","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://blog.csdn.net/dfy1407/article/details/88229807"}'  data-report-query='spm=1001.2101.3001.6650.13&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-13-88229807-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-13-88229807-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1"><em>Qt</em>多线程中定时<em>读</em>取<em>Modbus</em>服务器 寄存器以及<em>读</em>写，另一个线程点击刷新系统时间</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/dfy1407" target="_blank"><span class="blog-title">DFrY的博客</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">03-06</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					6355
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/dfy1407/article/details/88229807" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.13","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-13-88229807-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"13","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://blog.csdn.net/dfy1407/article/details/88229807"}'  data-report-query='spm=1001.2101.3001.6650.13&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-13-88229807-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-13-88229807-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">ui界面






程序结构图

global.h
#ifndef GLOBAL_H
#define GLOBAL_H
#include &amp;lt;QString&amp;gt;

class global
{
public:
    global();
    static QString ComPortName;
    static QString Tor;
};

#endif // GLOBAL...</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://smallash.blog.csdn.net/article/details/126477293"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.14","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-14-126477293-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"14","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://smallash.blog.csdn.net/article/details/126477293"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://smallash.blog.csdn.net/article/details/126477293" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.14","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-14-126477293-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"14","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://smallash.blog.csdn.net/article/details/126477293"}'  data-report-query='spm=1001.2101.3001.6650.14&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-14-126477293-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-14-126477293-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1"><em>qt</em>使用Q<em>Modbus</em>类实现<em>modbus</em> <em>TCP</em></div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/qq_15181569" target="_blank"><span class="blog-title">qq_15181569的博客</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">08-23</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					2025
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://smallash.blog.csdn.net/article/details/126477293" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.14","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-14-126477293-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"14","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://smallash.blog.csdn.net/article/details/126477293"}'  data-report-query='spm=1001.2101.3001.6650.14&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-14-126477293-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-14-126477293-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1"><em>qt</em>实现<em>modbus</em> <em>TCP</em></div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://dengjin.blog.csdn.net/article/details/116945787"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.15","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-15-116945787-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"15","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://dengjin.blog.csdn.net/article/details/116945787"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://dengjin.blog.csdn.net/article/details/116945787" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.15","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-15-116945787-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"15","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://dengjin.blog.csdn.net/article/details/116945787"}'  data-report-query='spm=1001.2101.3001.6650.15&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-15-116945787-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-15-116945787-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1">【<em>Qt</em>】Q<em>Modbus</em><em>Tcp</em>Server类</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/dengjin20104042056" target="_blank"><span class="blog-title">C/C++软件工程师、嵌入式软件工程师、物联网研发工程师、C/C++讲师、物联网讲师、嵌入式讲师---欢迎大家一起交流(私信添加博主微信)</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">05-17</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					1607
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://dengjin.blog.csdn.net/article/details/116945787" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.15","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-15-116945787-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"15","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://dengjin.blog.csdn.net/article/details/116945787"}'  data-report-query='spm=1001.2101.3001.6650.15&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-15-116945787-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-15-116945787-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">00. 目录
文章目录00. 目录01. 概述02. 开发环境03. 成员方法04. 信号05. 预留06. 附录
01. 概述
Q<em>Modbus</em><em>Tcp</em>Server类表示使用<em>TCP</em>服务器与<em>Modbus</em>客户端进行通信的<em>Modbus</em>服务器。
 Header:  #include &lt;Q<em>Modbus</em><em>Tcp</em>Server&gt;
 qmake: <em>QT</em> += serialbus 
 Since: <em>Qt</em> 5.8 
 Inherits: Q<em>Modbus</em>Server

通过<em>Modbus</em>进行通信需要在单个<em>Modbus</em>客户端实</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/m0_73443478/article/details/128779551"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.16","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-16-128779551-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"16","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://blog.csdn.net/m0_73443478/article/details/128779551"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/m0_73443478/article/details/128779551" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.16","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-16-128779551-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"16","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://blog.csdn.net/m0_73443478/article/details/128779551"}'  data-report-query='spm=1001.2101.3001.6650.16&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-16-128779551-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-16-128779551-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1">【<em>Qt</em>】Q<em>Modbus</em>Device类</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/m0_73443478" target="_blank"><span class="blog-title">m0_73443478的博客</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">01-28</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					245
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/m0_73443478/article/details/128779551" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.16","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-16-128779551-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"16","strategy":"2~default~BlogCommendFromBaidu~Rate","dest":"https://blog.csdn.net/m0_73443478/article/details/128779551"}'  data-report-query='spm=1001.2101.3001.6650.16&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-16-128779551-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-16-128779551-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">【<em>Qt</em>】Q<em>Modbus</em>Device类</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_blog clearfix" data-url="https://blog.csdn.net/LonelyBHBH/article/details/125239234"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.17","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-17-125239234-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"17","strategy":"2~default~CTRLIST~Rate","dest":"https://blog.csdn.net/LonelyBHBH/article/details/125239234"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://blog.csdn.net/LonelyBHBH/article/details/125239234" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.17","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-17-125239234-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"17","strategy":"2~default~CTRLIST~Rate","dest":"https://blog.csdn.net/LonelyBHBH/article/details/125239234"}'  data-report-query='spm=1001.2101.3001.6650.17&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-17-125239234-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-17-125239234-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1"><em>QT</em>7联合<em>Modbus</em>（<em>TCP</em>）<em>读</em>写PLC数据&mdash;&mdash;全网最完整</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info">
					<a href="https://blog.csdn.net/LonelyBHBH" target="_blank"><span class="blog-title">LonelyBHBH的博客</span></a>
				</div>
				<div class="info display-flex">
					<span class="info-block time">06-11</span>
					<span class="info-block read"><img class="read-img" src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					4587
					</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://blog.csdn.net/LonelyBHBH/article/details/125239234" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.17","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-17-125239234-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"17","strategy":"2~default~CTRLIST~Rate","dest":"https://blog.csdn.net/LonelyBHBH/article/details/125239234"}'  data-report-query='spm=1001.2101.3001.6650.17&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-17-125239234-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-17-125239234-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1">B站视频、CSDN&ldquo;找宝贝&rdquo;、度娘、博客园、Github找了好久关于<em>QT</em>联合<em>Modbus</em>（<em>TCP</em>）<em>读</em>写PLC数据的知识真就没有一个能从头到尾讲下来这个知识的，可能有也是我能力有限疏忽了，但是我能力范围内真就没有能把这个事儿说明白的，我自己通过学习CSDN前人的<em>QT</em>5里面<em>读</em>写PLC的知识和B站大佬讲解两个PLC之间<em>TCP</em>通讯，举一反三，硬把他们联系到一起，费话不多少，直接分享我的经验。不知道为啥首先添加新设备（我这个PLC只能用4.2版本的，其他版本不好用，有懂哥可以留言告诉弟弟，感谢）其次设置IP地址 访问</div>
			</a>
		</div>
	</div>
</div>
<div class="recommend-item-box type_chatgpt clearfix" data-url="https://wenku.csdn.net/answer/736d4c8a0b1611ee9763fa163eeb3507"  data-report-view='{"ab":"new","spm":"1001.2101.3001.6650.18","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-chatgpt-2~default~OPENSEARCH~Position-18-736d4c8a0b1611ee9763fa163eeb3507-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"18","strategy":"2~default~OPENSEARCH~Position","dest":"https://wenku.csdn.net/answer/736d4c8a0b1611ee9763fa163eeb3507"}'>
	<div class="content-box">
		<div class="content-blog display-flex">
			<div class="title-box">
				<a href="https://wenku.csdn.net/answer/736d4c8a0b1611ee9763fa163eeb3507" class="tit" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.18","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-chatgpt-2~default~OPENSEARCH~Position-18-736d4c8a0b1611ee9763fa163eeb3507-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"18","strategy":"2~default~OPENSEARCH~Position","dest":"https://wenku.csdn.net/answer/736d4c8a0b1611ee9763fa163eeb3507"}'  data-report-query='spm=1001.2101.3001.6650.18&utm_medium=distribute.pc_relevant.none-task-chatgpt-2%7Edefault%7EOPENSEARCH%7EPosition-18-736d4c8a0b1611ee9763fa163eeb3507-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-chatgpt-2%7Edefault%7EOPENSEARCH%7EPosition-18-736d4c8a0b1611ee9763fa163eeb3507-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
					<div class="left ellipsis-online ellipsis-online-1"><em>qt</em> <em>modbus</em>-<em>tcp</em></div>
					<div class="tag">最新发布</div>
				</a>
			</div>
			<div class="info-box display-flex">
				<div class="info display-flex">
					<span class="info-block">06-15</span>
				</div>
			</div>
		</div>
		<div class="desc-box">
			<a href="https://wenku.csdn.net/answer/736d4c8a0b1611ee9763fa163eeb3507" target="_blank"  data-report-click='{"ab":"new","spm":"1001.2101.3001.6650.18","mod":"popu_387","extra":"{\"highlightScore\":0.0,\"utm_medium\":\"distribute.pc_relevant.none-task-chatgpt-2~default~OPENSEARCH~Position-18-736d4c8a0b1611ee9763fa163eeb3507-blog-117079473.235^v38^pc_relevant_sort_base2\",\"dist_request_id\":\"1693475631907_27398\"}","dist_request_id":"1693475631907_27398","ab_strategy":"relrec_rankmodel_xgboost_v2","index":"18","strategy":"2~default~OPENSEARCH~Position","dest":"https://wenku.csdn.net/answer/736d4c8a0b1611ee9763fa163eeb3507"}'  data-report-query='spm=1001.2101.3001.6650.18&utm_medium=distribute.pc_relevant.none-task-chatgpt-2%7Edefault%7EOPENSEARCH%7EPosition-18-736d4c8a0b1611ee9763fa163eeb3507-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2&depth_1-utm_source=distribute.pc_relevant.none-task-chatgpt-2%7Edefault%7EOPENSEARCH%7EPosition-18-736d4c8a0b1611ee9763fa163eeb3507-blog-117079473.235%5Ev38%5Epc_relevant_sort_base2'>
				<div class="desc ellipsis-online ellipsis-online-1"><em>Qt</em> <em>Modbus</em> <em>TCP</em>是一种基于<em>Qt</em>框架的<em>Modbus</em> <em>TCP</em>通信协议实现。<em>Modbus</em> <em>TCP</em>是一种适用于工业自动化领域的<em>TCP</em>/IP通信协议，主要应用于PLC、HMI和工控设备之间的通信。<em>Qt</em> <em>Modbus</em> <em>TCP</em>提供了可靠的<em>Modbus</em> <em>TCP</em>通信功能，方便开发人员快速实现工业自动化设备的数据<em>读</em>写。

<em>Qt</em> <em>Modbus</em> <em>TCP</em>支持<em>Modbus</em> <em>TCP</em>的<em>读</em>写<em>操作</em>，包括离散输入、线圈、输入寄存器和保持寄存器四种类型的数据。它具有简洁的API，易于使用，开发人员可以快速地集成<em>Modbus</em> <em>TCP</em>通信功能到他们的应用程序中。同时，<em>Qt</em> <em>Modbus</em> <em>TCP</em>也支持多台设备的同时连接，可以大大提高通信的效率。

使用<em>Qt</em> <em>Modbus</em> <em>TCP</em>的开发人员只需要了解<em>Modbus</em> <em>TCP</em>协议的基本概念即可，无需深入了解<em>TCP</em>/IP协议的细节。<em>Qt</em> <em>Modbus</em> <em>TCP</em>还提供了接口和信号，方便开发人员对通信状态进行管理，包括连接状态、<em>读</em>写<em>操作</em>状态等。

总之，<em>Qt</em> <em>Modbus</em> <em>TCP</em>是一款方便快捷的工业自动化通信协议实现，具有协议简单、易于使用、可靠性高等优点。对于需要实现工业自动化设备数据<em>读</em>写功能的开发人员，<em>Qt</em> <em>Modbus</em> <em>TCP</em>是一种非常便利的选择。</div>
			</a>
		</div>
	</div>
</div>
              </div>
<div id="recommendNps" class="recommend-nps-box common-nps-box">
  <h3 class="aside-title">“相关推荐”对你有帮助么？</h3>
  <div class="aside-content">
      <ul class="newnps-list">
          <li class="newnps-item" data-type="非常没帮助">
              <div class="newnps-img-box">
                  <img class="newnps-img active" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeel1.png" alt="">
                  <img class="newnps-img default" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeelGrey1.png" alt="">
              </div>
              <div class="newnps-text">非常没帮助</div>
          </li>
          <li class="newnps-item" data-type="没帮助">
              <div class="newnps-img-box">
                  <img class="newnps-img active" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeel2.png" alt="">
                  <img class="newnps-img default" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeelGrey2.png" alt="">
              </div>
              <div class="newnps-text">没帮助</div>
          </li>
          <li class="newnps-item" data-type="一般">
              <div class="newnps-img-box">
                  <img class="newnps-img active" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeel3.png" alt="">
                  <img class="newnps-img default" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeelGrey3.png" alt="">
              </div>
              <div class="newnps-text">一般</div>
          </li>
          <li class="newnps-item" data-type="有帮助">
              <div class="newnps-img-box">
                  <img class="newnps-img active" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeel4.png" alt="">
                  <img class="newnps-img default" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeelGrey4.png" alt="">
              </div>
              <div class="newnps-text">有帮助</div>
          </li>
          <li class="newnps-item" data-type="非常有帮助">
              <div class="newnps-img-box">
                  <img class="newnps-img active" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeel5.png" alt="">
                  <img class="newnps-img default" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeelGrey5.png" alt="">
              </div>
              <div class="newnps-text">非常有帮助</div>
          </li>
      </ul>
      <div class="newnps-form-box">
      <div class="newnps-form">
          <input type="text" placeholder="请输入建议或反馈后点击提交" class="newnps-input">
          <span class="newnps-btn">提交</span>
      </div>
      </div>
  </div>
</div><div class="blog-footer-bottom" style="margin-top:10px;"></div>
<script src="https://g.csdnimg.cn/common/csdn-footer/csdn-footer.js" data-isfootertrack="false" type="text/javascript"></script>
<script type="text/javascript">
    window.csdn.csdnFooter.options = {
        el: '.blog-footer-bottom',
        type: 2
    }
</script>          </main>
<aside class="blog_container_aside">
<div id="asideProfile" class="aside-box">
    <div class="profile-intro d-flex">
        <div class="avatar-box d-flex justify-content-center flex-column">
            <a href="https://dengjin.blog.csdn.net" target="_blank" data-report-click='{"mod":"popu_379","spm":"1001.2101.3001.4121","dest":"https://dengjin.blog.csdn.net","ab":"new"}'>
                <img src="https://profile-avatar.csdnimg.cn/6137607fbdad4a0d9e302cbab2d548cc_dengjin20104042056.jpg!1" class="avatar_pic">
            </a>
        </div>
        <div class="user-info d-flex flex-column profile-intro-name-box">
            <div class="profile-intro-name-boxTop">
                <a href="https://dengjin.blog.csdn.net" target="_blank" class="" id="uid" title="沧海一笑-dj" data-report-click='{"mod":"popu_379","spm":"1001.2101.3001.4122","dest":"https://dengjin.blog.csdn.net","ab":"new"}'>
                    <span class="name " username="dengjin20104042056">沧海一笑-dj</span>
                </a>
                <span>
                </span>
                <span class="flag expert-blog">
                <img class="identity" src="https://csdnimg.cn/release/blogv2/dist/mobile/img/expertNew.png" alt="">
                <span class="bubble">CSDN认证博客专家</span>
                </span>
                <span class="flag company-blog">
                <span class="bubble">CSDN认证企业博客</span>
                </span>
            </div>
            <div class="profile-intro-name-boxFooter">
                <span class="personal-home-page personal-home-years" title="已加入 CSDN 13年">码龄13年</span>
                    <span class="personal-home-page">
                    <a class="personal-home-certification" href="https://i.csdn.net/#/uc/profile?utm_source=14998968" target="_blank" title="嵌入式领域优质创作者">
                    <img src="https://img-home.csdnimg.cn/images/20210412060958.png" alt="">
                    嵌入式领域优质创作者
                    </a>
                    </span>
            </div>
        </div>
    </div>
    <div class="data-info d-flex item-tiling">
        <dl class="text-center" title="1252">
            <a href="https://dengjin.blog.csdn.net" data-report-click='{"mod":"1598321000_001","spm":"1001.2101.3001.4310"}' data-report-query="t=1">  
                <dt><span class="count">1252</span></dt>
                <dd class="font">原创</dd>
            </a>
        </dl>
        <dl class="text-center" data-report-click='{"mod":"1598321000_002","spm":"1001.2101.3001.4311"}' title="2122">
            <a href="https://blog.csdn.net/rank/list/weekly" target="_blank">
                <dt><span class="count">2122</span></dt>
                <dd class="font">周排名</dd>
            </a>
        </dl>
        <dl class="text-center" title="130">
            <a href="https://blog.csdn.net/rank/list/total" data-report-click='{"mod":"1598321000_003","spm":"1001.2101.3001.4312"}' target="_blank">
                <dt><span class="count">130</span></dt>
                <dd class="font">总排名</dd>
            </a>
        </dl>
        <dl class="text-center" style="min-width:58px" title="4020670">  
            <dt><span class="count">402万+</span></dt>
            <dd>访问</dd>
        </dl>
        <dl class="text-center" title="8级,点击查看等级说明">
            <dt><a href="https://blog.csdn.net/blogdevteam/article/details/103478461" target="_blank">
                <img class="level" src="https://csdnimg.cn/identity/blog8.png">
            </a>
            </dt>
            <dd>等级</dd>
        </dl>
    </div>
    <div class="item-rank"></div>
    <div class="data-info d-flex item-tiling">
        <dl class="text-center" title="44607">
            <dt><span class="count">4万+</span></dt>
            <dd>积分</dd>
        </dl>
         <dl class="text-center" id="fanBox" title="20118">
            <dt><span class="count" id="fan">2万+</span></dt>
            <dd>粉丝</dd>
        </dl>
        <dl class="text-center" title="6282">
            <dt><span class="count">6282</span></dt>
            <dd>获赞</dd>
        </dl>
        <dl class="text-center" title="1565">
            <dt><span class="count">1565</span></dt>
            <dd>评论</dd>
        </dl>
        <dl class="text-center" title="26146">
            <dt><span class="count">2万+</span></dt>
            <dd>收藏</dd>
        </dl>
    </div>
    <div class="aside-box-footer" data-report-view='{"spm":"3001.4296"}'>
        <div class="badge-box d-flex">
            <div class="badge d-flex">
                <div class="icon-badge" title="1024达人勋章">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/1024daren@240.png" alt="1024达人勋章">
                    </div>
                </div>
                <div class="icon-badge" title="持之以恒">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/a5842d54e4fa4a6b9a1de25d928d556e.png" alt="持之以恒">
                    </div>
                </div>
                <div class="icon-badge" title="签到新秀">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/qiandao20@240.png" alt="签到新秀">
                    </div>
                </div>
                <div class="icon-badge" title="五一创作勋章">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/51_create.png" alt="五一创作勋章">
                    </div>
                </div>
                <div class="icon-badge" title="签到达人">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/qiandao50@240.png" alt="签到达人">
                    </div>
                </div>
                <div class="icon-badge" title="签到王者">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/qiandao200@240.png" alt="签到王者">
                    </div>
                </div>
                <div class="icon-badge" title="六一勋章">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/f51bcc1a1e48498fb4e6febea3b8352c.png" alt="六一勋章">
                    </div>
                </div>
                <div class="icon-badge" title="GitHub">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/github@240.png" alt="GitHub">
                    </div>
                </div>
                <div class="icon-badge" title="6月城市之星纪念勋章">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/46364e4da59a4788890ed15f2b2b3f11.png" alt="6月城市之星纪念勋章">
                    </div>
                </div>
                <div class="icon-badge" title="6月城市之星入围勋章">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/e78c9be10eac49908b14dedd2469f47a.png" alt="6月城市之星入围勋章">
                    </div>
                </div>
                <div class="icon-badge" title="笔耕不辍">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/99f9420937fc4c1a89bb9b1792b9058d.png" alt="笔耕不辍">
                    </div>
                </div>
                <div class="icon-badge" title="学习力">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/yuanli_xuexili@240.png" alt="学习力">
                    </div>
                </div>
                <div class="icon-badge" title="分享王者">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/fenxiangwangzhe@240.png" alt="分享王者">
                    </div>
                </div>
                <div class="icon-badge" title="专栏达人">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/zhuanlandaren@240.png" alt="专栏达人">
                    </div>
                </div>
                <div class="icon-badge" title="持续创作">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/chizhiyiheng@240.png" alt="持续创作">
                    </div>
                </div>
                <div class="icon-badge" title="勤写标兵">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/eabb492c5e3343738376cdb052649492.png" alt="勤写标兵">
                    </div>
                </div>
                <div class="icon-badge" title="1024勋章">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/1024up@240.png" alt="1024勋章">
                    </div>
                </div>
                <div class="icon-badge" title="1024超级勋章">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/chaoji1024@240.png" alt="1024超级勋章">
                    </div>
                </div>
                <div class="icon-badge" title="创作能手">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/qixiebiaobing4@240.png" alt="创作能手">
                    </div>
                </div>
                <div class="icon-badge" title="新人勋章">
                    <div class="mouse-box">
                        <img class="medal-img" data-report-click='{"spm":"3001.4296"}' src="https://csdnimg.cn/medal/blinknewcomer@240.png" alt="新人勋章">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="profile-intro-name-boxOpration">
        <div class="opt-letter-watch-box">
        <a rel="nofollow" class="bt-button personal-letter" href="https://im.csdn.net/chat/dengjin20104042056" target="_blank" rel="noopener">私信</a>
        </div>
        <div class="opt-letter-watch-box"> 
            <a class="personal-watch bt-button" id="btnAttent" >关注</a>  
        </div>
    </div>
</div>
  <div id="asideWriteGuide" class="aside-box side-write-guide-box type-2" data-report-view='{"spm":"3001.9728"}'>
      <div class="content-box">
        <a href="https://mp.csdn.net/edit" target="_blank" class="btn-go-write" data-report-query="spm=3001.9728" data-report-click='{"spm":"3001.9728"}'>
          <img src="https://img-home.csdnimg.cn/images/20230817060240.png" alt="写文章">
        </a>
      </div>
  </div>
<div id="asideSearchArticle" class="aside-box">
	<div class="aside-content search-comter">
    <div class="aside-search aside-search-blog">         
        <input type="text" class="input-serch-blog" name="" autocomplete="off" value="" id="search-blog-words" placeholder="搜博主文章">
        <a class="btn-search-blog" data-report-click='{"spm":"1001.2101.3001.9182"}'>
                    <img src="//csdnimg.cn/cdn/content-toolbar/csdn-sou.png?v=1587021042">
        </a>
    </div>
    </div>
</div>


<div id="asideHotArticle" class="aside-box">
	<h3 class="aside-title">热门文章</h3>
	<div class="aside-content">
		<ul class="hotArticle-list">
			<li>
				<a href="https://dengjin.blog.csdn.net/article/details/80462511" target="_blank"  data-report-click='{"mod":"popu_541","spm":"1001.2101.3001.4139","dest":"https://dengjin.blog.csdn.net/article/details/80462511","ab":"new"}'>
				【Ubuntu】 Ubuntu16.04修改主机名和查看主机名的方法
					<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					<span class="read">102189</span>
                </a>
			</li>
			<li>
				<a href="https://dengjin.blog.csdn.net/article/details/88975907" target="_blank"  data-report-click='{"mod":"popu_541","spm":"1001.2101.3001.4139","dest":"https://dengjin.blog.csdn.net/article/details/88975907","ab":"new"}'>
				【Qt5.12】Qt5.12.2安装教程
					<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					<span class="read">91503</span>
                </a>
			</li>
			<li>
				<a href="https://dengjin.blog.csdn.net/article/details/103930275" target="_blank"  data-report-click='{"mod":"popu_541","spm":"1001.2101.3001.4139","dest":"https://dengjin.blog.csdn.net/article/details/103930275","ab":"new"}'>
				【程序人生】程序员接私活常用平台汇总
					<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					<span class="read">85733</span>
                </a>
			</li>
			<li>
				<a href="https://dengjin.blog.csdn.net/article/details/72802521" target="_blank"  data-report-click='{"mod":"popu_541","spm":"1001.2101.3001.4139","dest":"https://dengjin.blog.csdn.net/article/details/72802521","ab":"new"}'>
				【AD10】Altium Designer 10导入元件库图文教程
					<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					<span class="read">83024</span>
                </a>
			</li>
			<li>
				<a href="https://dengjin.blog.csdn.net/article/details/94669639" target="_blank"  data-report-click='{"mod":"popu_541","spm":"1001.2101.3001.4139","dest":"https://dengjin.blog.csdn.net/article/details/94669639","ab":"new"}'>
				【Linux】一步一步学Linux系列教程汇总（更新中......）
					<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/readCountWhite.png" alt="">
					<span class="read">69465</span>
                </a>
			</li>
		</ul>
	</div>
</div>
<div id="asideCategory" class="aside-box flexible-box">
    <h3 class="aside-title">分类专栏</h3>
    <div class="aside-content">
        <ul>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_9267682.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_9267682.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190901171438695.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        Linux环境高级编程
                    </span>
                </a>
                <span class="special-column-num">148篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_12370464.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_12370464.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/2dc07c798ca24cef8c18161d32a6f16d.jpeg?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        人工智能
                    </span>
                </a>
                <span class="special-column-num">19篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_11015496.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_11015496.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20201014180756757.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        机器视觉
                    </span>
                </a>
                <span class="special-column-num">119篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_10998942.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_10998942.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20210421091459634.jpg?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        数字图像处理
                    </span>
                </a>
                <span class="special-column-num">12篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_10769423.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_10769423.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20201014180756927.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        工业控制
                    </span>
                </a>
                <span class="special-column-num">15篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_1368055.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_1368055.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190831113810663.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        Java 学习
                    </span>
                </a>
                <span class="special-column-num">13篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_1378117.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_1378117.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190901172423503.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        嵌入式天地
                    </span>
                </a>
                <span class="special-column-num">139篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_1400937.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_1400937.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20201014180756754.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        编译原理
                    </span>
                </a>
                <span class="special-column-num">1篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_1737479.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_1737479.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190829173126794.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        Qt
                    </span>
                </a>
                <span class="special-column-num">164篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_2700297.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_2700297.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190831114019197.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        Android
                    </span>
                </a>
                <span class="special-column-num">46篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_2700347.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_2700347.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/2019082917281359.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        Linux基础
                    </span>
                </a>
                <span class="special-column-num">330篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_2700349.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_2700349.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190829172957230.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        C和C++
                    </span>
                </a>
                <span class="special-column-num">120篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_2700351.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_2700351.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190901171538783.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        ARM
                    </span>
                </a>
                <span class="special-column-num">74篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_5754267.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_5754267.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20201014180756930.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        物联网世界
                    </span>
                </a>
                <span class="special-column-num">56篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_5755779.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_5755779.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190901172552599.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        电子信息工程
                    </span>
                </a>
                <span class="special-column-num">2篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_5593479.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_5593479.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190901172233946.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        信息安全
                    </span>
                </a>
                <span class="special-column-num">7篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_5621073.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_5621073.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20201014180756916.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        生活乐园
                    </span>
                </a>
                <span class="special-column-num">22篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_5754293.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_5754293.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20201014180756916.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        科海拾贝
                    </span>
                </a>
                <span class="special-column-num">4篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_5754295.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_5754295.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190906150546866.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        学海无涯
                    </span>
                </a>
                <span class="special-column-num">24篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_6066020.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_6066020.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190901171958951.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        Linux驱动
                    </span>
                </a>
                <span class="special-column-num">10篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_6375546.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_6375546.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190829211204762.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        数据结构与算法
                    </span>
                </a>
                <span class="special-column-num">6篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_6565973.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_6565973.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190831114822701.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        剑指offer
                    </span>
                </a>
                <span class="special-column-num">4篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_7299333.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_7299333.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190831114305180.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        数据库
                    </span>
                </a>
                <span class="special-column-num">9篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_7610049.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_7610049.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190831114502197.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        Tools
                    </span>
                </a>
                <span class="special-column-num">84篇</span>
            </li>
            <li>
                <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_7634800.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_7634800.html","ab":"new"}'>
                    <div class="special-column-bar "></div>
                    <img src="https://img-blog.csdnimg.cn/20190901171729171.jpg?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                    <span class="title oneline">
                        项目和课程设计
                    </span>
                </a>
                <span class="special-column-num">5篇</span>
            </li>
        </ul>
    </div>
    <p class="text-center">
        <a class="flexible-btn" data-fbox="aside-archive"><img class="look-more" src="https://csdnimg.cn/release/blogv2/dist/pc/img/arrowDownWhite.png" alt=""></a>
    </p>
</div>
<div id="asideNewComments" class="aside-box">
    <h3 class="aside-title">最新评论</h3>
    <div class="aside-content">
        <ul class="newcomment-list">
            <li>
                <a class="title text-truncate" target="_blank" href="https://dengjin.blog.csdn.net/article/details/130826648#comments_28419055" data-report-click='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://dengjin.blog.csdn.net/article/details/130826648#comments_28419055","ab":"new"}' data-report-view='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://dengjin.blog.csdn.net/article/details/130826648#comments_28419055","ab":"new"}'>【Tools】IAR-EV8051 8.10安装教程详解</a>
                <p class="comment ellipsis">
                    <a href="https://blog.csdn.net/m0_61659911" class="user-name" target="_blank">m0_61659911: </a>
                    <span class="code-comments">好人有好报</span>
                </p>
            </li>
            <li>
                <a class="title text-truncate" target="_blank" href="https://dengjin.blog.csdn.net/article/details/115247380#comments_28393377" data-report-click='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://dengjin.blog.csdn.net/article/details/115247380#comments_28393377","ab":"new"}' data-report-view='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://dengjin.blog.csdn.net/article/details/115247380#comments_28393377","ab":"new"}'>【Qt】XML简介</a>
                <p class="comment ellipsis">
                    <a href="https://blog.csdn.net/weixin_45504378" class="user-name" target="_blank">坎坷愁记: </a>
                    <span class="code-comments">引用「XML 被设计用来结构化、存储以及传输信息」
比较准确的定义</span>
                </p>
            </li>
            <li>
                <a class="title text-truncate" target="_blank" href="https://dengjin.blog.csdn.net/article/details/108078155#comments_28385537" data-report-click='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://dengjin.blog.csdn.net/article/details/108078155#comments_28385537","ab":"new"}' data-report-view='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://dengjin.blog.csdn.net/article/details/108078155#comments_28385537","ab":"new"}'>【STM32】新建基于STM32F40x 固件库的MDK5 工程</a>
                <p class="comment ellipsis">
                    <a href="https://dengjin.blog.csdn.net" class="user-name" target="_blank">沧海一笑-dj: </a>
                    <span class="code-comments">是不是少了哪一步配置</span>
                </p>
            </li>
            <li>
                <a class="title text-truncate" target="_blank" href="https://dengjin.blog.csdn.net/article/details/132128983#comments_28385530" data-report-click='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://dengjin.blog.csdn.net/article/details/132128983#comments_28385530","ab":"new"}' data-report-view='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://dengjin.blog.csdn.net/article/details/132128983#comments_28385530","ab":"new"}'>【Ubuntu】Ubuntu系统出现Failed to mount VMware vmblock fuse mount</a>
                <p class="comment ellipsis">
                    <a href="https://dengjin.blog.csdn.net" class="user-name" target="_blank">沧海一笑-dj: </a>
                    <span class="code-comments">dd删除呀</span>
                </p>
            </li>
            <li>
                <a class="title text-truncate" target="_blank" href="https://dengjin.blog.csdn.net/article/details/132128983#comments_28385260" data-report-click='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://dengjin.blog.csdn.net/article/details/132128983#comments_28385260","ab":"new"}' data-report-view='{"mod":"popu_542","spm":"1001.2101.3001.4231","dest":"https://dengjin.blog.csdn.net/article/details/132128983#comments_28385260","ab":"new"}'>【Ubuntu】Ubuntu系统出现Failed to mount VMware vmblock fuse mount</a>
                <p class="comment ellipsis">
                    <a href="https://blog.csdn.net/qq_56278757" class="user-name" target="_blank">yagami199: </a>
                    <span class="code-comments">3.5的删除如何操作</span>
                </p>
            </li>
        </ul>
    </div>
</div>
<div id="asideNewNps" class="aside-box common-nps-box">
    <h3 class="aside-title">您愿意向朋友推荐“博客详情页”吗？</h3>
    <div class="aside-content">
        <ul class="newnps-list">
            <li class="newnps-item" data-type="强烈不推荐">
                <div class="newnps-img-box">
                    <img class="newnps-img active" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeel1.png" alt="">
                    <img class="newnps-img default" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeelGrey1.png" alt="">
                </div>
                <div class="newnps-text">强烈不推荐</div>
            </li>
            <li class="newnps-item" data-type="不推荐">
                <div class="newnps-img-box">
                    <img class="newnps-img active" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeel2.png" alt="">
                    <img class="newnps-img default" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeelGrey2.png" alt="">
                </div>
                <div class="newnps-text">不推荐</div>
            </li>
            <li class="newnps-item" data-type="一般般">
                <div class="newnps-img-box">
                    <img class="newnps-img active" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeel3.png" alt="">
                    <img class="newnps-img default" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeelGrey3.png" alt="">
                </div>
                <div class="newnps-text">一般般</div>
            </li>
            <li class="newnps-item" data-type="推荐">
                <div class="newnps-img-box">
                    <img class="newnps-img active" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeel4.png" alt="">
                    <img class="newnps-img default" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeelGrey4.png" alt="">
                </div>
                <div class="newnps-text">推荐</div>
            </li>
            <li class="newnps-item" data-type="强烈推荐">
                <div class="newnps-img-box">
                    <img class="newnps-img active" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeel5.png" alt="">
                    <img class="newnps-img default" src="https://csdnimg.cn/release/blogv2/dist/pc/img/npsFeelGrey5.png" alt="">
                </div>
                <div class="newnps-text">强烈推荐</div>
            </li>
        </ul>
        <div class="newnps-form-box">
        <div class="newnps-form">
            <input type="text" placeholder="请输入建议或反馈后点击提交" class="newnps-input">
            <span class="newnps-btn">提交</span>
        </div>
        </div>
    </div>
</div>
<div id="asideArchive" class="aside-box" style="display:block!important; width:300px;">
    <h3 class="aside-title">最新文章</h3>
    <div class="aside-content">
        <ul class="inf_list clearfix">
            <li class="clearfix">
            <a href="https://dengjin.blog.csdn.net/article/details/132566569" target="_blank" data-report-click='{"mod":"popu_382","spm":"1001.2101.3001.4136","dest":"https://dengjin.blog.csdn.net/article/details/132566569","ab":"new"}' data-report-view='{"mod":"popu_382","dest":"https://dengjin.blog.csdn.net/article/details/132566569","ab":"new"}'>【Linux环境高级编程】Linux环境高级编程作业</a>
            </li>
            <li class="clearfix">
            <a href="https://dengjin.blog.csdn.net/article/details/132449060" target="_blank" data-report-click='{"mod":"popu_382","spm":"1001.2101.3001.4136","dest":"https://dengjin.blog.csdn.net/article/details/132449060","ab":"new"}' data-report-view='{"mod":"popu_382","dest":"https://dengjin.blog.csdn.net/article/details/132449060","ab":"new"}'>【S5P6818】最小文件系统制作</a>
            </li>
            <li class="clearfix">
            <a href="https://dengjin.blog.csdn.net/article/details/132447669" target="_blank" data-report-click='{"mod":"popu_382","spm":"1001.2101.3001.4136","dest":"https://dengjin.blog.csdn.net/article/details/132447669","ab":"new"}' data-report-view='{"mod":"popu_382","dest":"https://dengjin.blog.csdn.net/article/details/132447669","ab":"new"}'>【Qt】Qt事件系统</a>
            </li>
        </ul>
        <div class="archive-bar"></div>
        <div class="archive-box">
                <div class="archive-title">2023</div> 
                <div class="archive-content">
                    <div class="archive-item">
                        <a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2023&amp;month=08" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2023&amp;month=08"}'>
                        <span class="time">08月</span>
                        <span class="count">13篇</span>
                        </a>
                    </div>
                    <div class="archive-item">
                        <a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2023&amp;month=07" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2023&amp;month=07"}'>
                        <span class="time">07月</span>
                        <span class="count">46篇</span>
                        </a>
                    </div>
                    <div class="archive-item">
                        <a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2023&amp;month=06" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2023&amp;month=06"}'>
                        <span class="time">06月</span>
                        <span class="count">33篇</span>
                        </a>
                    </div>
                    <div class="archive-item">
                        <a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2023&amp;month=05" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2023&amp;month=05"}'>
                        <span class="time">05月</span>
                        <span class="count">21篇</span>
                        </a>
                    </div>
                    <div class="archive-item">
                        <a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2023&amp;month=04" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2023&amp;month=04"}'>
                        <span class="time">04月</span>
                        <span class="count">1篇</span>
                        </a>
                    </div>
                </div>
                <div class="archive-list-item"><a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2022&amp;month=09" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2022&amp;month=09"}'><span class="year">2022年</span><span class="num">12篇</span></a></div>
                <div class="archive-list-item"><a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2021&amp;month=12" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2021&amp;month=12"}'><span class="year">2021年</span><span class="num">318篇</span></a></div>
                <div class="archive-list-item"><a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2020&amp;month=12" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2020&amp;month=12"}'><span class="year">2020年</span><span class="num">241篇</span></a></div>
                <div class="archive-list-item"><a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2019&amp;month=12" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2019&amp;month=12"}'><span class="year">2019年</span><span class="num">418篇</span></a></div>
                <div class="archive-list-item"><a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2018&amp;month=12" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2018&amp;month=12"}'><span class="year">2018年</span><span class="num">24篇</span></a></div>
                <div class="archive-list-item"><a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2017&amp;month=12" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2017&amp;month=12"}'><span class="year">2017年</span><span class="num">37篇</span></a></div>
                <div class="archive-list-item"><a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2016&amp;month=12" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2016&amp;month=12"}'><span class="year">2016年</span><span class="num">73篇</span></a></div>
                <div class="archive-list-item"><a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2015&amp;month=12" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2015&amp;month=12"}'><span class="year">2015年</span><span class="num">63篇</span></a></div>
                <div class="archive-list-item"><a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2014&amp;month=12" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2014&amp;month=12"}'><span class="year">2014年</span><span class="num">68篇</span></a></div>
                <div class="archive-list-item"><a href="https://dengjin.blog.csdn.net?type=blog&amp;year=2013&amp;month=11" target="_blank" data-report-click='{"mod":"popu_538","spm":"1001.2101.3001.4138","ab":"new","dest":"https://dengjin.blog.csdn.net?type=blog&amp;year=2013&amp;month=11"}'><span class="year">2013年</span><span class="num">37篇</span></a></div>
        </div>
    </div>
</div>
    <!-- 详情页显示目录 -->
<!--文章目录-->
<div id="asidedirectory" class="aside-box">
    <div class='groupfile' id="directory">
        <h3 class="aside-title">目录</h3>
        <div class="align-items-stretch group_item">
            <div class="pos-box">
            <div class="scroll-box">
                <div class="toc-box"></div>
            </div>
            </div>
        </div>
    </div>
</div>
</aside>
<script>
	$("a.flexible-btn").click(function(){
		$(this).parents('div.aside-box').removeClass('flexible-box');
		$(this).parents("p.text-center").remove();
	})
</script>
<script type="text/javascript"  src="https://g.csdnimg.cn/user-tooltip/2.7/user-tooltip.js"></script>
<script type="text/javascript"  src="https://g.csdnimg.cn/user-medal/2.0.0/user-medal.js"></script>        </div>
<div class="recommend-right align-items-stretch clearfix" id="rightAside" data-type="recommend">
    <aside class="recommend-right_aside">
        <div id="recommend-right" >
                        <div class='flex-column aside-box groupfile' id="groupfile">
                <div class="groupfile-div">
                <h3 class="aside-title">目录</h3>
                <div class="align-items-stretch group_item">
                    <div class="pos-box">
                        <div class="scroll-box">
                            <div class="toc-box"></div>
                        </div>
                    </div>
                </div>
                </div>
            </div>
            <div class='aside-box kind_person d-flex flex-column'>
                    <h3 class="aside-title">分类专栏</h3>
                    <div class="align-items-stretch kindof_item" id="kind_person_column">
                        <div class="aside-content">
                            <ul>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_9267682.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_9267682.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190901171438695.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            Linux环境高级编程
                                        </span>
                                    </a>
                                    <span class="special-column-num">148篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_12370464.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_12370464.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/2dc07c798ca24cef8c18161d32a6f16d.jpeg?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            人工智能
                                        </span>
                                    </a>
                                    <span class="special-column-num">19篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_11015496.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_11015496.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20201014180756757.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            机器视觉
                                        </span>
                                    </a>
                                    <span class="special-column-num">119篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_10998942.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_10998942.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20210421091459634.jpg?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            数字图像处理
                                        </span>
                                    </a>
                                    <span class="special-column-num">12篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_10769423.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_10769423.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20201014180756927.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            工业控制
                                        </span>
                                    </a>
                                    <span class="special-column-num">15篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_1368055.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_1368055.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190831113810663.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            Java 学习
                                        </span>
                                    </a>
                                    <span class="special-column-num">13篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_1378117.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_1378117.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190901172423503.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            嵌入式天地
                                        </span>
                                    </a>
                                    <span class="special-column-num">139篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_1400937.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_1400937.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20201014180756754.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            编译原理
                                        </span>
                                    </a>
                                    <span class="special-column-num">1篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_1737479.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_1737479.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190829173126794.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            Qt
                                        </span>
                                    </a>
                                    <span class="special-column-num">164篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_2700297.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_2700297.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190831114019197.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            Android
                                        </span>
                                    </a>
                                    <span class="special-column-num">46篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_2700347.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_2700347.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/2019082917281359.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            Linux基础
                                        </span>
                                    </a>
                                    <span class="special-column-num">330篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_2700349.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_2700349.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190829172957230.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            C和C++
                                        </span>
                                    </a>
                                    <span class="special-column-num">120篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_2700351.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_2700351.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190901171538783.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            ARM
                                        </span>
                                    </a>
                                    <span class="special-column-num">74篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_5754267.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_5754267.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20201014180756930.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            物联网世界
                                        </span>
                                    </a>
                                    <span class="special-column-num">56篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_5755779.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_5755779.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190901172552599.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            电子信息工程
                                        </span>
                                    </a>
                                    <span class="special-column-num">2篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_5593479.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_5593479.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190901172233946.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            信息安全
                                        </span>
                                    </a>
                                    <span class="special-column-num">7篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_5621073.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_5621073.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20201014180756916.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            生活乐园
                                        </span>
                                    </a>
                                    <span class="special-column-num">22篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_5754293.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_5754293.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20201014180756916.png?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            科海拾贝
                                        </span>
                                    </a>
                                    <span class="special-column-num">4篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_5754295.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_5754295.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190906150546866.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            学海无涯
                                        </span>
                                    </a>
                                    <span class="special-column-num">24篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_6066020.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_6066020.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190901171958951.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            Linux驱动
                                        </span>
                                    </a>
                                    <span class="special-column-num">10篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_6375546.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_6375546.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190829211204762.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            数据结构与算法
                                        </span>
                                    </a>
                                    <span class="special-column-num">6篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_6565973.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_6565973.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190831114822701.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            剑指offer
                                        </span>
                                    </a>
                                    <span class="special-column-num">4篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_7299333.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_7299333.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190831114305180.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            数据库
                                        </span>
                                    </a>
                                    <span class="special-column-num">9篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_7610049.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_7610049.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190831114502197.jfif?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            Tools
                                        </span>
                                    </a>
                                    <span class="special-column-num">84篇</span>
                                </li>
                                <li>
                                    <a class="clearfix special-column-name"  href="https://blog.csdn.net/dengjin20104042056/category_7634800.html" data-report-click='{"mod":"popu_537","spm":"1001.2101.3001.4137","strategy":"pc付费专栏左侧入口","dest":"https://blog.csdn.net/dengjin20104042056/category_7634800.html","ab":"new"}'>
                                        <div class="special-column-bar "></div>
                                        <img src="https://img-blog.csdnimg.cn/20190901171729171.jpg?x-oss-process=image/resize,m_fixed,h_64,w_64" alt="" onerror="this.src='https://img-blog.csdnimg.cn/20201014180756922.png?x-oss-process=image/resize,m_fixed,h_64,w_64'">
                                        <span class="">
                                            项目和课程设计
                                        </span>
                                    </a>
                                    <span class="special-column-num">5篇</span>
                                </li>
                            </ul>
                        </div>
                    </div>
            </div>
        </div>
    </aside>
</div>

<div class="recommend-right1  align-items-stretch clearfix" id="rightAsideConcision" data-type="recommend">
    <aside class="recommend-right_aside">
        <div id="recommend-right-concision" >
            <div class='flex-column aside-box groupfile' id="groupfileConcision">
                <div class="groupfile-div1">
                <h3 class="aside-title">目录</h3>
                <div class="align-items-stretch group_item">
                    <div class="pos-box">
                        <div class="scroll-box">
                            <div class="toc-box"></div>
                        </div>
                    </div>
                </div>
                </div>
            </div>
        </div>
    </aside>
</div>

      </div>
      <div class="mask-dark"></div>
        <script type="text/javascript">
        var timert = setInterval(function() {
          sideToolbar = $(".csdn-side-toolbar");
          if (sideToolbar.length > 0) {
            sideToolbar.css('cssText', 'bottom:64px !important;')
            clearInterval(timert);
          }
        }, 200);
        </script>
      <div class="skin-boxshadow"></div>
      <div class="directory-boxshadow"></div>
<div class="comment-side-box-shadow comment-side-tit-close" id="commentSideBoxshadow">
<div class="comment-side-content">
	<div class="comment-side-tit">
		<div class="comment-side-tit-count">评论&nbsp;<span class="count">9</span></div>
	<img class="comment-side-tit-close" src="https://csdnimg.cn/release/blogv2/dist/pc/img/closeBt.png"></div>
	<div id="pcCommentSideBox" class="comment-box comment-box-new2 unlogin-comment-box-new" style="display:none">
	</div>
	<div id="pcFlodCommentSideBox" class="pc-flodcomment-sidebox">
		<div class="comment-fold-tit"><span id="lookUnFlodComment" class="back"><img src="https://csdnimg.cn/release/blogv2/dist/pc/img/commentArrowLeftWhite.png" alt=""></span>被折叠的&nbsp;<span class="count"></span>&nbsp;条评论
		 <a href="https://blogdev.blog.csdn.net/article/details/122245662" class="tip" target="_blank">为什么被折叠?</a>
		 <a href="https://bbs.csdn.net/forums/FreeZone" class="park" target="_blank">
		 <img src="https://csdnimg.cn/release/blogv2/dist/pc/img/iconPark.png">到【灌水乐园】发言</a>                                
		</div>
		<div class="comment-fold-content"></div>
		<div id="lookBadComment" class="look-bad-comment side-look-comment">
			<a class="look-more-comment">查看更多评论<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/commentArrowDownWhite.png" alt=""></a>
		</div>
	</div>
</div>
<div class="comment-rewarddialog-box">
  <div class="form-box">
    <div class="title-box">
      添加红包
      <a class="btn-form-close"></a>
    </div>
    <form id="commentRewardForm">
      <div class="ipt-box">
        <label for="txtName">祝福语</label>
        <div class="ipt-btn-box">
          <input type="text" name="name" id="txtName" autocomplete="off" maxlength="50">
          <a class="btn-ipt btn-random"></a>
        </div>
        <p class="notice">请填写红包祝福语或标题</p>
      </div>
      <div class="ipt-box">
        <label for="txtSendAmount">红包数量</label>
        <div class="ipt-txt-box">
          <input type="text" name="sendAmount" maxlength="4" id="txtSendAmount" placeholder="请填写红包数量(最小10个)" autocomplete="off">
          <span class="after-txt">个</span>
        </div>
        <p class="notice">红包个数最小为10个</p>
      </div>
      <div class="ipt-box">
        <label for="txtMoney">红包总金额</label>
        <div class="ipt-txt-box error">
          <input type="text" name="money" maxlength="5" id="txtMoney" placeholder="请填写总金额(最低5元)" autocomplete="off">
          <span class="after-txt">元</span>
        </div>
        <p class="notice">红包金额最低5元</p>
      </div>
      <div class="balance-info-box">
        <label>余额支付</label>
        <div class="balance-info">
          当前余额<span class="balance">3.43</span>元
          <a href="https://i.csdn.net/#/wallet/balance/recharge" class="link-charge" target="_blank">前往充值 ></a>
        </div>
      </div>
      <div class="opt-box">
        <div class="pay-info">
          需支付：<span class="price">10.00</span>元
        </div>
        <button type="button" class="ml-auto btn-cancel">取消</button>
        <button type="button" class="ml8 btn-submit" disabled="true">确定</button>
      </div>
    </form>
  </div>
</div>
<div class="rr-guide-box">
  <div class="rr-first-box">
    <img src="https://csdnimg.cn/release/blogv2/dist/pc/img/guideRedReward02.png" alt="">
    <button class="btn-guide-known next">下一步</button>
  </div>
  <div class="rr-second-box">
    <img src="https://csdnimg.cn/release/blogv2/dist/pc/img/guideRedReward03.png" alt="">
    <button class="btn-guide-known known">知道了</button>
  </div>
</div>
</div>

<div class="redEnvolope" id="redEnvolope">
  <div class="env-box">
    <div class="env-container">
      <div class="pre-open" id="preOpen">
        <div class="top">
          <header>
            <img class="clearTpaErr" :src="redpacketAuthor.avatar" alt="" />
            <div class="author">成就一亿技术人!</div>
          </header>
          <div class="bot-icon"></div>
        </div>
        <footer>
          <div class="red-openbtn open-start"></div>
          <div class="tip">
            领取后你会自动成为博主和红包主的粉丝
            <a class="rule" target="_blank">规则</a>
          </div>
        </footer>
      </div>
      <div class="opened" id="opened">
        <div class="bot-icon">
          <header>
            <a class="creatorUrl" href="" target="_blank">
              <img class="clearTpaErr" src="https://profile-avatar.csdnimg.cn/default.jpg!2" alt="" />
            </a>
            <div class="author">
              <div class="tt">hope_wisdom</div> 发出的红包
            </div>
          </header>
        </div>
        <div class="receive-box">
          <header></header>
          <div class="receive-list">
          </div>
        </div>
      </div>
    </div>
    <div class="close-btn"></div>
  </div>
</div>
<div id="rewardNew" class="reward-popupbox-new">
	<p class="rewad-title">打赏作者<span class="reward-close"><img src="https://csdnimg.cn/release/blogv2/dist/pc/img/closeBt.png"></span></p>
	<dl class="profile-box">
		<dd>
		<a href="https://dengjin.blog.csdn.net" data-report-click='{"mod":"popu_379","dest":"https://dengjin.blog.csdn.net","ab":"new"}'>
			<img src="https://profile-avatar.csdnimg.cn/6137607fbdad4a0d9e302cbab2d548cc_dengjin20104042056.jpg!1" class="avatar_pic">
		</a>
		</dd>
		<dt>
			<p class="blog-name">沧海一笑-dj</p>
			<p class="blog-discript">你的鼓励将是我创作的最大动力</p>
		</dt>
	</dl>
	<div class="reward-box-new">
			<div class="reward-content"><div class="reward-right"></div></div>
	</div>
	<div class="money-box">
    <span class="choose-money choosed" data-id="1">¥1</span>
    <span class="choose-money " data-id="2">¥2</span>
    <span class="choose-money " data-id="4">¥4</span>
    <span class="choose-money " data-id="6">¥6</span>
    <span class="choose-money " data-id="10">¥10</span>
    <span class="choose-money " data-id="20">¥20</span>
	</div>
	<div class="sure-box">
		<div class="sure-box-money">
			<div class="code-box">
				<div class="code-num-box">
					<span class="code-name">扫码支付：</span><span class="code-num">¥1</span>
				</div>
				<div class="code-img-box">
					<div class="renovate">
					<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/pay-time-out.png">
					<span>获取中</span>
					</div>
				</div>
				<div class="code-pay-box">
					<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/newWeiXin.png" alt="">
					<img src="https://csdnimg.cn/release/blogv2/dist/pc/img/newZhiFuBao.png" alt="">
					<span>扫码支付</span>
				</div>
			</div>
		</div>
		<div class="sure-box-blance">
			<p class="tip">您的余额不足，请更换扫码支付或<a target="_blank" data-report-click='{"mod":"1597646289_003","spm":"1001.2101.3001.4302"}' href="https://i.csdn.net/#/wallet/balance/recharge?utm_source=RewardVip" class="go-invest">充值</a></p>
			<p class="is-have-money"><a class="reward-sure">打赏作者</a></p>
		</div>
	</div>
</div>
      
      <div class="pay-code">
      <div class="pay-money">实付<span class="pay-money-span" data-nowprice='' data-oldprice=''>元</span></div>
      <div class="content-blance"><a class="blance-bt" href="javascript:;">使用余额支付</a></div>
      <div class="content-code">
        <div id="payCode" data-id="">
          <div class="renovate">
            <img src="https://csdnimg.cn/release/blogv2/dist/pc/img/pay-time-out.png">
            <span>点击重新获取</span>
          </div>
        </div>
        <div class="pay-style"><span><img src="https://csdnimg.cn/release/blogv2/dist/pc/img/weixin.png"></span><span><img src="https://csdnimg.cn/release/blogv2/dist/pc/img/zhifubao.png"></span><span><img src="https://csdnimg.cn/release/blogv2/dist/pc/img/jingdong.png"></span><span class="text">扫码支付</span></div>
      </div>
      <div class="bt-close">
        <svg t="1567152543821" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="10924" xmlns:xlink="http://www.w3.org/1999/xlink" width="12" height="12">
          <defs>
            <style type="text/css"></style>
          </defs>
          <path d="M512 438.378667L806.506667 143.893333a52.032 52.032 0 1 1 73.6 73.621334L585.621333 512l294.485334 294.485333a52.074667 52.074667 0 0 1-73.6 73.642667L512 585.621333 217.514667 880.128a52.053333 52.053333 0 1 1-73.621334-73.642667L438.378667 512 143.893333 217.514667a52.053333 52.053333 0 1 1 73.621334-73.621334L512 438.378667z" fill="" p-id="10925"></path>
        </svg>
      </div>
      <div class="pay-balance">
        <input type="radio" class="pay-code-radio" data-type="details">
        <span class="span">钱包余额</span>
          <span class="balance" style="color:#FC5531;font-size:14px;">0</span>
          <div class="pay-code-tile">
            <img src="https://csdnimg.cn/release/blogv2/dist/pc/img/pay-help.png" alt="">
            <div class="pay-code-content">
              <div class="span">
                <p class="title">抵扣说明：</p>
                <p> 1.余额是钱包充值的虚拟货币，按照1:1的比例进行支付金额的抵扣。<br> 2.余额无法直接购买下载，可以购买VIP、付费专栏及课程。</p>
              </div>
            </div>
          </div>
      </div>
      <a class="pay-balance-con" href="https://i.csdn.net/#/wallet/balance/recharge" target="_blank"><img src="https://csdnimg.cn/release/blogv2/dist/pc/img/recharge.png" alt=""><span>余额充值</span></a>
    </div>
    <div style="display:none;">
      <img src="" onerror='setTimeout(function(){if(!/(csdn.net|iteye.com|baiducontent.com|googleusercontent.com|360webcache.com|sogoucdn.com|bingj.com|baidu.com)$/.test(window.location.hostname)){window.location.href="\x68\x74\x74\x70\x73\x3a\x2f\x2f\x77\x77\x77\x2e\x63\x73\x64\x6e\x2e\x6e\x65\x74"}},3000);'>
    </div>
    <div class="keyword-dec-box" id="keywordDecBox"></div>
  </body>
  <script src="https://csdnimg.cn/release/blogv2/dist/components/js/axios-83fa28cedf.min.js" type="text/javascript"></script>
  <script src="https://csdnimg.cn/release/blogv2/dist/components/js/pc_wap_highlight-8defd55d6e.min.js" type="text/javascript"></script>
  <script src="https://csdnimg.cn/release/blogv2/dist/components/js/pc_wap_common-be82269d23.min.js" type="text/javascript"></script>
  <script src="https://csdnimg.cn/release/blogv2/dist/components/js/edit_copy_code-2d3931414f.min.js" type="text/javascript"></script>
  <link rel="stylesheet" href="https://csdnimg.cn/release/blog_editor_html/release1.6.12/ckeditor/plugins/codesnippet/lib/highlight/styles/tomorrow-night.css">
  <script src="https://g.csdnimg.cn/user-accusation/1.0.6/user-accusation.js" type="text/javascript"></script>
  <script>
    // 全局声明
    if (window.csdn === undefined) {
      window.csdn = {};
    }
    window.csdn.sideToolbar = {
      options: {
        report: {
          isShow: true,
        },
        qr: {
          isShow: false,
        },
        guide: {
          isShow: true
        }
      }
    }
    $(function() {
      $(document).on('click', "a.option-box[data-type='report']", function() {
        window.csdn.loginBox.key({
          biz: 'blog',
          subBiz: 'other_service',
          cb: function() {
            window.csdn.feedback({
              "type": 'blog',
              "rtype": 'article',
              "rid": articleId,
              "reportedName": username,
              "submitOptions": {
                "title": articleTitle,
                "contentUrl": articleDetailUrl
              },
              "callback": function() {
                showToast({
                  text: "感谢您的举报，我们会尽快审核！",
                  bottom: '10%',
                  zindex: 9000,
                  speed: 500,
                  time: 1500
                })
              }
            })
          }
        })
      });
    })
  </script>
    <script src="https://g.csdnimg.cn/baidu-search/1.0.12/baidu-search.js" type="text/javascript"></script>
  <script src="https://csdnimg.cn/release/download/old_static/js/qrcode.js"></script>
  <script src="https://g.csdnimg.cn/lib/qrcode/1.0.0/qrcode.min.js"></script>
  <script src="https://g.csdnimg.cn/user-ordercart/3.0.1/user-ordercart.js" type="text/javascript"></script>
  <script src="https://g.csdnimg.cn/user-ordertip/5.0.1/user-ordertip.js" type="text/javascript"></script>
  <script src="https://g.csdnimg.cn/order-payment/4.0.3/order-payment.js" type="text/javascript"></script>
  <script src="https://csdnimg.cn/release/blogv2/dist/pc/js/common-761bd8deaf.min.js" type="text/javascript"></script>
  <script src="https://csdnimg.cn/release/blogv2/dist/pc/js/detail-8729d0a8ab.min.js" type="text/javascript"></script>
  <script src="https://csdnimg.cn/release/blogv2/dist/pc/js/column-3911b0dc26.min.js" type="text/javascript"></script>
  <script src="https://g.csdnimg.cn/side-toolbar/3.4/side-toolbar.js" type="text/javascript"></script>
  <script src="https://g.csdnimg.cn/copyright/1.0.4/copyright.js" type="text/javascript"></script>
  <script>
    $(".MathJax").remove();
    if ($('div.markdown_views pre.prettyprint code.hljs').length > 0) {
      $('div.markdown_views')[0].className = 'markdown_views';
    }
  </script>
  <script type="text/javascript" src="https://csdnimg.cn/release/blog_mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  <script type="text/x-mathjax-config">
    MathJax.Hub.Config({
      "HTML-CSS": {
        linebreaks: { automatic: true, width: "94%container" },
        imageFont: null
      },
      tex2jax: {
      preview: "none",
      ignoreClass:"title-article"
      },
      mml2jax: {
      preview: 'none'
      }
    });
  </script>
<script type="text/javascript" crossorigin src="https://g.csdnimg.cn/common/csdn-login-box/csdn-login-box.js"></script></html>